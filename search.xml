<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>next-config summary</title>
    <url>/archives/c40f80fb.html</url>
    <content><![CDATA[<h1 id="Next-config-summary-2"><a href="#Next-config-summary-2" class="headerlink" title="Next-config summary -2"></a>Next-config summary -2</h1><h1 id="16-在文章底部增加版权信息"><a href="#16-在文章底部增加版权信息" class="headerlink" title="16. 在文章底部增加版权信息"></a>16. 在文章底部增加版权信息</h1><p><strong>实现效果图</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-a264542f53665849.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<p>在目录 <code>next/layout/_macro/下</code>添加 <code>my-copyright.swig</code>：</p>
<figure class="highlight twig"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="keyword">if</span></span> page.copyright %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"my_post_copyright"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!-- JS库 sweetalert 可修改路径 --&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/sweetalert/dist/sweetalert.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>本文标题:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; url_for(page.path) &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span><span class="template-variable">&#123;&#123; page.title &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>文章作者:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span> <span class="attr">title</span>=<span class="string">"访问 </span></span></span><span class="template-variable">&#123;&#123; theme.author &#125;&#125;</span><span class="xml"><span class="tag"><span class="string"> 的个人博客"</span>&gt;</span></span><span class="template-variable">&#123;&#123; theme.author &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>发布时间:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123; page.<span class="name">date</span>.format("YYYY年MM月DD日 - HH:mm") &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>最后更新:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:mm") &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>原始链接:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; url_for(page.path) &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">title</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; page.title &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span><span class="template-variable">&#123;&#123; page.permalink &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copy-path"</span>  <span class="attr">title</span>=<span class="string">"点击复制文章链接"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-clipboard"</span> <span class="attr">data-clipboard-text</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; page.permalink &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>  <span class="attr">aria-label</span>=<span class="string">"复制成功！"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>许可协议:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-creative-commons"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">rel</span>=<span class="string">"license"</span> <span class="attr">href</span>=<span class="string">"https://creativecommons.org/licenses/by-nc-nd/4.0/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"</span>&gt;</span>署名-非商业性使用-禁止演绎 4.0 国际<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 转载请保留原文链接及作者。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    var clipboard = new Clipboard('.fa-clipboard');</span></span><br><span class="line"><span class="xml">    $(".fa-clipboard").click(function()&#123;</span></span><br><span class="line"><span class="xml">      clipboard.on('success', function()&#123;</span></span><br><span class="line"><span class="xml">        swal(&#123;   </span></span><br><span class="line"><span class="xml">          title: "",   </span></span><br><span class="line"><span class="xml">          text: '复制成功',</span></span><br><span class="line"><span class="xml">          icon: "success", </span></span><br><span class="line"><span class="xml">          showConfirmButton: true</span></span><br><span class="line"><span class="xml">          &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="keyword">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p>在目录<code>next/source/css/_common/components/post/</code>下添加<code>my-post-copyright.styl</code>：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">85%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">45em</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">2.8em</span> auto <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d3d3d3</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.93rem</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.6em</span>;</span><br><span class="line">  <span class="attribute">word-break</span>: break-all;</span><br><span class="line">  <span class="attribute">background</span>: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.4</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">p</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">5.2em</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#b5b5b5</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.raw</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a3d2a3</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.fa-clipboard</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.post-url</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1em</span>;</span><br><span class="line">  +mobile()&#123;<span class="attribute">display</span>:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改<code>next/layout/_macro/post.swig</code>，在代码</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not is_index %&#125;</span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> 'wechat-subscriber.swig' %&#125;</span></span><br><span class="line"><span class="xml">      </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>之前添加增加如下代码：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not is_index %&#125;</span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> 'my-copyright.swig' %&#125;</span></span><br><span class="line"><span class="xml">      </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<p>修改<code>next/source/css/_common/components/post/post.styl</code>文件，在最后一行增加代码：</p>
<figure class="highlight xl"><table><tr><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">"my-post-copyright"</span></span><br></pre></td></tr></table></figure>

<p>保存重新生成即可。<br>如果要在该博文下面增加版权信息的显示，需要在 Markdown 中增加copyright: true的设置，类似：</p>
<blockquote>
<p><strong>小技巧</strong>：如果你觉得每次都要输入<code>copyright: true</code>很麻烦的话,那么在<code>/scaffolds/post.md</code>文件中添加：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-51f087ce1f1903a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"><br>这样每次<code>hexo new &quot;你的内容&quot;</code>之后，生成的md文件会自动把<code>copyright:</code>加到里面去<br>(<strong>注意</strong>：如果解析出来之后，你的原始链接有问题：如：<code>http://yoursite.com/前端小项目：使用canvas绘画哆啦A梦.html</code>,那么在根目录下<code>_config.yml</code>中写成类似这样：）<br><img src="http://upload-images.jianshu.io/upload_images/5308475-980129b36907d103.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img">就行了。</p>
</blockquote>
<hr>
<a id="more"></a>



<h1 id="17-添加跟帖-来必力"><a href="#17-添加跟帖-来必力" class="headerlink" title="17.添加跟帖-来必力"></a>17.添加跟帖-来必力</h1><p>首先在 <code>_config.yml</code> 文件中添加如下配置：(<strong>注意！如果主题是最新版的，直接写你的liver_uid就行了</strong>)</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># Support for LiveRe comments <span class="keyword">system</span>.</span><br><span class="line"># You can get your uid <span class="keyword">from</span> https:<span class="comment">//livere.com/insight/myCode (General web site)</span></span><br><span class="line">livere_uid: your uid</span><br></pre></td></tr></table></figure>

<p>其中，<code>livere_uid</code>就是画红线的部分<br><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fhdqgyeu2fj30ms02yglr.jpg" alt="img"></p>
<p>然后在 <code>layout/_scripts/third-party/comments/</code> 目录中添加 livere.swig，文件内容如下：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname and not theme.disqus_shortname and not theme.hypercomments_id and not theme.gentie_productKey %&#125;</span></span><br><span class="line"><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.livere_uid %&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      (function(d, s) &#123;</span></span><br><span class="line"><span class="xml">        var j, e = d.getElementsByTagName(s)[0];</span></span><br><span class="line"><span class="xml">        if (typeof LivereTower === 'function') &#123; return; &#125;</span></span><br><span class="line"><span class="xml">        j = d.createElement(s);</span></span><br><span class="line"><span class="xml">        j.src = 'https://cdn-city.livere.com/js/embed.dist.js';</span></span><br><span class="line"><span class="xml">        j.async = true;</span></span><br><span class="line"><span class="xml">        e.parentNode.insertBefore(j, e);</span></span><br><span class="line"><span class="xml">      &#125;)(document, 'script');</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p>然后在 <code>layout/_scripts/third-party/comments.swig</code>文件中追加：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> './comments/livere.swig' %&#125;</span></span><br></pre></td></tr></table></figure>

<p>最后，在 <code>layout/_partials/comments.swig</code> 文件中条件最后追加 LiveRe 插件是否引用的判断逻辑：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">elseif</span> theme.livere_uid %&#125;</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"lv-container"</span> <span class="attr">data-id</span>=<span class="string">"city"</span> <span class="attr">data-uid</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; theme.livere_uid &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p>完</p>
<hr>
<h1 id="18-隐藏网页底部powered-By-Hexo-强力驱动"><a href="#18-隐藏网页底部powered-By-Hexo-强力驱动" class="headerlink" title="18. 隐藏网页底部powered By Hexo / 强力驱动"></a>18. 隐藏网页底部powered By Hexo / 强力驱动</h1><p>打开<code>themes/next/layout/_partials/footer.swig</code>,使用”<!-- -->”隐藏之间的代码即可，或者直接删除。位置如图：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-8e8340c7a0489bce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<hr>
<h1 id="19-修改网页底部的桃心"><a href="#19-修改网页底部的桃心" class="headerlink" title="19. 修改网页底部的桃心"></a>19. 修改网页底部的桃心</h1><p>还是打开<code>themes/next/layout/_partials/footer.swig</code>，找到：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-f6355823aef7f723.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img">)，然后还是在<a href="http://fontawesome.io/icons/" target="_blank" rel="external nofollow noopener noreferrer">图标库</a>中找到你自己喜欢的图标，然后修改画红线的部分就可以了。</p>
<hr>
<h1 id="20-文章加密访问"><a href="#20-文章加密访问" class="headerlink" title="20. 文章加密访问"></a>20. 文章加密访问</h1><p><strong>实现效果图</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-0c7e5e61b78dc937.gif?imageMogr2/auto-orient/strip" alt="img"></p>
<p><strong>具体实现方法</strong></p>
<p>打开<code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code>文件,在以下位置插入这样一段代码：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-446793cd6d740b19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<p>代码如下：</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="name">function</span> () &#123;</span><br><span class="line">        if ('&#123;&#123; page.password &#125;&#125;') &#123;</span><br><span class="line">            if (<span class="name">prompt</span>('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;') &#123;</span><br><span class="line">                alert('密码错误！')<span class="comment">;</span></span><br><span class="line">                if (<span class="name">history</span>.length === <span class="number">1</span>) &#123;</span><br><span class="line">                    location.replace(<span class="string">"http://xxxxxxx.xxx"</span>)<span class="comment">; // 这里替换成你的首页</span></span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    history.back()<span class="comment">;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)()<span class="comment">;</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>然后在文章上写成类似这样：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-e6c726a0152cb8ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<hr>
<h1 id="21-添加jiathis分享"><a href="#21-添加jiathis分享" class="headerlink" title="21. 添加jiathis分享"></a>21. 添加jiathis分享</h1><blockquote>
<p><strong>注意：</strong>JiaThis 不支持 https</p>
</blockquote>
<p>在<strong>主题配置文件</strong>中，JiaThis为true，就行了，如下图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-f381bc9e7c73b1e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<p>默认是这样子的：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-a88228b9ea43ab2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"><br>如果你想自定义话，打开<code>themes/next/layout/_partials/share/jiathis.swig</code>修改画红线部分就可以了<br><img src="http://upload-images.jianshu.io/upload_images/5308475-68c51498744e1636.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<hr>
<h1 id="22-博文置顶"><a href="#22-博文置顶" class="headerlink" title="22. 博文置顶"></a>22. 博文置顶</h1><p>修改 <code>hero-generator-index</code> 插件，把文件：<code>node_modules/hexo-generator-index/lib/generator.js</code> 内的代码替换为：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line">  <span class="keyword">var</span> posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">  <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">    format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>在文章中添加 <code>top</code> 值，数值越大文章越靠前，如</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">解决Charles乱码问题</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="number">-05</span><span class="number">-22</span> <span class="number">22</span><span class="string">:45:48</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">技巧</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">技巧</span></span><br><span class="line"><span class="attr">copyright:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">top:</span> <span class="number">100</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<hr>
<h1 id="23-修改字体大小"><a href="#23-修改字体大小" class="headerlink" title="23. 修改字体大小"></a>23. 修改字体大小</h1><p>打开<code>\themes\next\source\css\ _variables\base.styl</code>文件，将<code>$font-size-base</code>改成<code>16px</code>，如下所示：</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$font</span>-size-base =16px</span></span><br></pre></td></tr></table></figure>

<hr>
<h1 id="24-修改打赏字体不闪动"><a href="#24-修改打赏字体不闪动" class="headerlink" title="24. 修改打赏字体不闪动"></a>24. 修改打赏字体不闪动</h1><p>修改文件<code>next/source/css/_common/components/post/post-reward.styl</code>，然后注释其中的函数<code>wechat:hover</code>和<code>alipay:hover</code>，如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">/*</span> <span class="string">注释文字闪动函数</span></span><br><span class="line"> <span class="comment">#wechat:hover p&#123;</span></span><br><span class="line">    <span class="attr">animation:</span> <span class="string">roll</span> <span class="number">0.</span><span class="string">1s</span> <span class="string">infinite</span> <span class="string">linear;</span></span><br><span class="line">    <span class="string">-webkit-animation:</span> <span class="string">roll</span> <span class="number">0.</span><span class="string">1s</span> <span class="string">infinite</span> <span class="string">linear;</span></span><br><span class="line">    <span class="string">-moz-animation:</span> <span class="string">roll</span> <span class="number">0.</span><span class="string">1s</span> <span class="string">infinite</span> <span class="string">linear;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"> <span class="comment">#alipay:hover p&#123;</span></span><br><span class="line">   <span class="attr">animation:</span> <span class="string">roll</span> <span class="number">0.</span><span class="string">1s</span> <span class="string">infinite</span> <span class="string">linear;</span></span><br><span class="line">    <span class="string">-webkit-animation:</span> <span class="string">roll</span> <span class="number">0.</span><span class="string">1s</span> <span class="string">infinite</span> <span class="string">linear;</span></span><br><span class="line">    <span class="string">-moz-animation:</span> <span class="string">roll</span> <span class="number">0.</span><span class="string">1s</span> <span class="string">infinite</span> <span class="string">linear;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">*/</span></span><br></pre></td></tr></table></figure>

<hr>
<h1 id="25-自定义鼠标样式"><a href="#25-自定义鼠标样式" class="headerlink" title="25. 自定义鼠标样式"></a>25. 自定义鼠标样式</h1><p>打开<code>themes/next/source/css/_custom/custom.styl</code>,在里面写下如下代码</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 鼠标样式</span></span><br><span class="line">  * &#123;</span><br><span class="line">      <span class="attribute">cursor</span>: url(<span class="string">"http://om8u46rmb.bkt.clouddn.com/sword2.ico"</span>),auto<span class="meta">!important</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">      <span class="attribute">cursor</span>: url(<span class="string">"http://om8u46rmb.bkt.clouddn.com/sword1.ico"</span>),auto<span class="meta">!important</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>其中 url 里面必须是 ico 图片，ico 图片可以上传到网上（我是使用七牛云图床），然后获取外链，复制到 url 里就行了</p>
<hr>
<h1 id="26-为博客加上萌萌的宠物"><a href="#26-为博客加上萌萌的宠物" class="headerlink" title="26.为博客加上萌萌的宠物"></a>26.为博客加上萌萌的宠物</h1><p><strong>实现效果图</strong><br><img src="https://blog-1257878287.cos.ap-chengdu.myqcloud.com/15006365382590.jpg" alt="img"></p>
<p><strong>具体实现方法</strong><br>在终端切换到你的博客的路径里，然后输入如下代码：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> -<span class="keyword">save</span> hexo-helper-live2d</span><br></pre></td></tr></table></figure>

<p><del>然后打开<code>Hexo/blog/themes/next/layout</code><br>的<code>_layout.swig</code>,将下面代码放到<code>&lt;/body&gt;</code>之前：</del></p>
<p>(<strong>注意，由于官方更新了包，所以画删除线的不用弄</strong>)</p>
<p>然后在在 <code>hexo</code> 的 <code>_config.yml</code>中添加参数：（具体配置可以看<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="external nofollow noopener noreferrer">官方文档</a>）</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-wanko</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>然后hexo clean ，hexo g ，hexo d 就可以看到了。</p>
<blockquote>
<p>注意！如果你在 hexo d 的时候出现我下面这个问题<br><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fhrqw92685j31dk0q4grl.jpg" alt="img"><br>你可以这样，首先删除hexo 下面的.deploy_git文件夹，然后运行</p>
</blockquote>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global core.autocrlf <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>重新 hexo clean,hexo g,hexo d就行了</p>
</blockquote>
<hr>
<h1 id="27-DaoVoice-在线联系"><a href="#27-DaoVoice-在线联系" class="headerlink" title="27.DaoVoice 在线联系"></a>27.DaoVoice 在线联系</h1><p><strong>实现效果图</strong></p>
<p><img src="https://blog-1257878287.cos.ap-chengdu.myqcloud.com/2017-12-18-053222.png" alt="img"></p>
<p><strong>具体实现方法</strong></p>
<p>首先在 <a href="https://account.daocloud.io/signin" target="_blank" rel="external nofollow noopener noreferrer">daovoice</a> 注册账号,<a href="http://dashboard.daovoice.io/get-started?invite_code=0f81ff2f" target="_blank" rel="external nofollow noopener noreferrer">邀请码</a>是<code>0f81ff2f</code>，注册完成后会得到一个 app_id :</p>
<p><img src="https://blog-1257878287.cos.ap-chengdu.myqcloud.com/2017-12-18-054308.png" alt="img"><br>记下这个 app_id的值，然后打开<code>/themes/next/layout/_partials/head.swig</code>,写下如下代码：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.daovoice %&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  (function(i,s,o,g,r,a,m)&#123;i["DaoVoiceObject"]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset="utf-8";m.parentNode.insertBefore(a,m)&#125;)(window,document,"script",('https:' == document.location.protocol ? 'https:' : 'http:') + "//widget.daovoice.io/widget/0f81ff2f.js","daovoice")</span></span><br><span class="line"><span class="xml">  daovoice('init', &#123;</span></span><br><span class="line"><span class="xml">      app_id: "</span><span class="template-variable">&#123;&#123;theme.daovoice_app_id&#125;&#125;</span><span class="xml">"</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">  daovoice('update');</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://blog-1257878287.cos.ap-chengdu.myqcloud.com/2017-12-18-054603.png" alt="img"></p>
<p>接着打开<strong>主题配置文件</strong>，在最后写下如下代码：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Online contact </span></span><br><span class="line"><span class="attr">daovoice:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">daovoice_app_id:</span> <span class="string">这里填你的刚才获得的</span> <span class="string">app_id</span></span><br></pre></td></tr></table></figure>

<p>重新 hexo g ，hexo s 就能看到效果了。</p>
<blockquote>
<p>安装成功后可以在DaoVoice 控制台上的聊天设置里设置聊天窗口样式，附上我的设置</p>
</blockquote>
<p><img src="https://blog-1257878287.cos.ap-chengdu.myqcloud.com/2017-12-18-055639.png" alt="img"></p>
<hr>
<h1 id="28-点击爆炸效果"><a href="#28-点击爆炸效果" class="headerlink" title="28.点击爆炸效果"></a>28.点击爆炸效果</h1><p><strong>实现效果图</strong></p>
<p><img src="https://blog-1257878287.cos.ap-chengdu.myqcloud.com/2017-12-18-084649.png" alt="img"></p>
<p><strong>实现方法</strong></p>
<p>跟那个红心是差不多的，首先在<code>themes/next/source/js/src</code>里面建一个叫fireworks.js的文件，代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure>

<p>打开<code>themes/next/layout/_layout.swig</code>,在<code>&lt;/body&gt;</code>上面写下如下代码：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.fireworks %&#125;</span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">"fireworks"</span> <span class="attr">style</span>=<span class="string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span> &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span> </span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/fireworks.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p>打开主题配置文件，在里面最后写下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Fireworks</span></span><br><span class="line"><span class="attr">fireworks:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>next-config summary</title>
    <url>/archives/c40f80fb.html</url>
    <content><![CDATA[<h1 id="Hexo的next主题个性化配置教程"><a href="#Hexo的next主题个性化配置教程" class="headerlink" title="Hexo的next主题个性化配置教程"></a>Hexo的next主题个性化配置教程</h1><hr>
<h1 id="1-添加RSS"><a href="#1-添加RSS" class="headerlink" title="1.添加RSS"></a>1.添加RSS</h1><p><strong>具体实现方法</strong></p>
<p>切换到blog（根目录）</p>
<p>然后安装 Hexo 插件：(这个插件会放在<code>node_modules</code>这个文件夹里)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> <span class="comment">--save hexo-generator-feed</span></span><br></pre></td></tr></table></figure>

<p>接下来打开站点配置文件</p>
<p>在里面的末尾添加：(<strong>请注意</strong>在冒号后面要加一个空格，不然会发生错误！)</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: http:<span class="comment">//hexo.io/plugins/</span></span><br><span class="line">plugins: hexo-<span class="keyword">generate</span>-feed</span><br></pre></td></tr></table></figure>

<p>然后打开next主题文件夹里面的<code>_config.yml</code>,在里面配置为如下样子：(就是在<code>rss:</code>的后面加上<code>/atom.xml</code>,<strong>注意</strong>在冒号后面要加一个空格)</p>
<hr>
<h1 id="2-修改文章内链接文本样式"><a href="#2-修改文章内链接文本样式" class="headerlink" title="2. 修改文章内链接文本样式"></a>2. 修改文章内链接文本样式</h1><p><strong>实现效果图</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-8cc4fc18c399af7e.gif?imageMogr2/auto-orient/strip" alt="img"></p>
<p><strong>具体实现方法</strong></p>
<p>修改文件 <code>themes\next\source\css\_common\components\post\post.styl</code>，在末尾添加如下css样式，：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 文章内链接文本样式</span></span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#0593d3</span>;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc6423</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#fc6423</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中选择<code>.post-body</code> 是为了不影响标题，选择 <code>p</code> 是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。</p>
<hr>
<h1 id="3-修改文章底部的那个带-号的标签"><a href="#3-修改文章底部的那个带-号的标签" class="headerlink" title="3. 修改文章底部的那个带#号的标签"></a>3. 修改文章底部的那个带#号的标签</h1><p><strong>实现效果图</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-9f1817d2d7627f7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<p><strong>具体实现方法</strong></p>
<p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p>
<hr>
<h1 id="4-在每篇文章末尾统一添加“本文结束”标记"><a href="#4-在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="4. 在每篇文章末尾统一添加“本文结束”标记"></a>4. 在每篇文章末尾统一添加“本文结束”标记</h1><p><strong>实现效果图</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-90be73acbc5f8a7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<p><strong>具体实现方法</strong></p>
<p>在路径 <code>\themes\next\layout\_macro</code> 中新建 <code>passage-end-tag.swig</code> 文件,并添加以下内容：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not is_index %&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span>-------------本文结束<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-paw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>感谢您的阅读-------------<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>接着打开<code>\themes\next\layout\_macro\post.swig</code>文件，在<code>post-body</code> 之后， <code>post-footer</code> 之前添加如下代码</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not is_index %&#125;</span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> 'passage-end-tag.swig' %&#125;</span></span><br><span class="line"><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>然后打开主题配置文件（<code>_config.yml</code>),在末尾添加：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line"><span class="attr">passage_end_tag:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>完成以上设置之后，在每篇文章之后都会添加如上效果图的样子。</p>
<hr>
<a id="more"></a>



<h1 id="5-修改作者头像并旋转"><a href="#5-修改作者头像并旋转" class="headerlink" title="5. 修改作者头像并旋转"></a>5. 修改作者头像并旋转</h1><p><strong>具体实现方法</strong></p>
<p>打开<code>\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>，在里面添加如下代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: $site-author-image-padding;</span><br><span class="line">  <span class="attribute">max-width</span>: $site-author-image-width;</span><br><span class="line">  <span class="attribute">height</span>: $site-author-image-height;</span><br><span class="line">  <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 头像圆形 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#333</span>sf;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 </span></span><br><span class="line"><span class="comment">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  <span class="attribute">-webkit-transition</span>: -webkit-transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">  <span class="attribute">-moz-transition</span>: -moz-transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 鼠标经过停止头像旋转 </span></span><br><span class="line"><span class="comment">  -webkit-animation-play-state:paused;</span></span><br><span class="line"><span class="comment">  animation-play-state:paused;*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(<span class="number">360deg</span>);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(<span class="number">360deg</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">360deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Z 轴旋转动画 */</span></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-moz-keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="6-博文压缩"><a href="#6-博文压缩" class="headerlink" title="6. 博文压缩"></a>6. 博文压缩</h1><p>在站点的根目录下执行以下命令：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> gulp -g</span><br><span class="line">$ npm <span class="keyword">install</span> gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>根目录下，新建 <code>gulpfile.js</code> ，并填入以下内容：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">'gulp-minify-css'</span>);</span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">'gulp-htmlclean'</span>);</span><br><span class="line"><span class="comment">// 压缩 public 目录 css</span></span><br><span class="line">gulp.task(<span class="string">'minify-css'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.css'</span>)</span><br><span class="line">        .pipe(minifycss())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩 public 目录 html</span></span><br><span class="line">gulp.task(<span class="string">'minify-html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</span><br><span class="line">    .pipe(htmlclean())</span><br><span class="line">    .pipe(htmlmin(&#123;</span><br><span class="line">         removeComments: <span class="literal">true</span>,</span><br><span class="line">         minifyJS: <span class="literal">true</span>,</span><br><span class="line">         minifyCSS: <span class="literal">true</span>,</span><br><span class="line">         minifyURLs: <span class="literal">true</span>,</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./public'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩 public/js 目录 js</span></span><br><span class="line">gulp.task(<span class="string">'minify-js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.js'</span>)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 执行 gulp 命令时执行的任务</span></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [</span><br><span class="line">    <span class="string">'minify-html'</span>,<span class="string">'minify-css'</span>,<span class="string">'minify-js'</span></span><br><span class="line">]);</span><br></pre></td></tr></table></figure>

<p>生成博文是执行 <code>hexo g &amp;&amp; gulp</code> 就会根据 <code>gulpfile.js</code> 中的配置，对 public 目录中的静态资源文件进行压缩。</p>
<hr>
<h1 id="7-修改-代码块自定义样式"><a href="#7-修改-代码块自定义样式" class="headerlink" title="7. 修改``代码块自定义样式"></a>7. 修改``代码块自定义样式</h1><p><strong>实现效果图</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-e83a6ac00d4d1db3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<p><strong>具体实现方法</strong></p>
<p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：(颜色可以自己定义)</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Custom styles.</span></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7600</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fbf7f8</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 大代码块的自定义样式</span></span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">pre</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">code</span>, <span class="selector-tag">pre</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d6d6d6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="8-主页文章添加阴影效果"><a href="#8-主页文章添加阴影效果" class="headerlink" title="8. 主页文章添加阴影效果"></a>8. 主页文章添加阴影效果</h1><p><strong>实现效果图</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-21046c442900bf3f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<p><strong>具体实现方法</strong></p>
<p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 主页文章添加阴影效果</span></span><br><span class="line"> .post &#123;</span><br><span class="line">   margin-top: <span class="number">60</span>px;</span><br><span class="line">   margin-bottom: <span class="number">60</span>px;</span><br><span class="line">   padding: <span class="number">25</span>px;</span><br><span class="line">   -webkit-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span>px rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">.5</span>);</span><br><span class="line">   -moz-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span>px rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">.5</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="9-在网站底部加上访问量"><a href="#9-在网站底部加上访问量" class="headerlink" title="9. 在网站底部加上访问量"></a>9. 在网站底部加上访问量</h1><p><strong>实现效果图</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-3124557da2b9c75f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<p><strong>具体实现方法</strong><br>打开<code>\themes\next\layout\_partials\footer.swig</code>文件,在copyright前加上画红线这句话：</p>
<p>代码如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后再合适的位置添加显示统计的代码，如图：<br>代码如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"powered-by"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-user-md"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span></span><br><span class="line">  本站访客数:<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在这里有两中不同计算方式的统计代码：</p>
<ol>
<li><strong>pv</strong>的方式，单个用户连续点击n篇文章，记录n次访问量</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_pv"</span>&gt;</span></span><br><span class="line">    本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol>
<li><strong>uv</strong>的方式，单个用户连续点击n篇文章，只记录1次访客数</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span></span><br><span class="line">  本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>



<hr>
<h1 id="10-添加热度"><a href="#10-添加热度" class="headerlink" title="10. 添加热度"></a>10. 添加热度</h1><p><strong>实现效果图</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-9bc8a6587cd1a575.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<p><strong>具体实现方法</strong></p>
<p><strong>next</strong>主题集成<strong>leanCloud</strong>，打开<code>/themes/next/layout/_macro/post.swig</code>,在画红线的区域添加<code>℃</code>：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-f5dbda6888a79dd4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<p>然后打开，<code>/themes/next/languages/zh-Hans.yml</code>,将画红框的改为热度就可以了<br><img src="http://upload-images.jianshu.io/upload_images/5308475-bd0e1ac5456a2f0c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<hr>
<h1 id="11-网站底部字数统计"><a href="#11-网站底部字数统计" class="headerlink" title="11. 网站底部字数统计"></a>11. 网站底部字数统计</h1><p><strong>实现效果图</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-f26f21e2f2b34e18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<p><strong>具体方法实现</strong><br>切换到根目录下，然后运行如下代码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-wordcount <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>然后在<code>/themes/next/layout/_partials/footer.swig</code>文件尾部加上：</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"theme-info"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"powered-by"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">  &lt;span <span class="built_in">class</span>=<span class="string">"post-count"</span>&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="12-添加-README-md-文件"><a href="#12-添加-README-md-文件" class="headerlink" title="12. 添加 README.md 文件"></a>12. 添加 README.md 文件</h1><p>每个项目下一般都有一个 <code>README.md</code> 文件，但是使用 hexo 部署到仓库后，项目下是没有 <code>README.md</code> 文件的。</p>
<p>在 Hexo 目录下的 <code>source</code> 根目录下添加一个 <code>README.md</code> 文件，修改站点配置文件 _<code>config.yml</code>，将 <code>skip_render</code> 参数的值设置为</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">skip_render: <span class="module-access"><span class="module"><span class="identifier">README</span>.</span></span>md</span><br></pre></td></tr></table></figure>

<p>保存退出即可。再次使用 <code>hexo d</code> 命令部署博客的时候就不会在渲染 README.md 这个文件了。</p>
<hr>
<h1 id="13-设置网站的图标Favicon"><a href="#13-设置网站的图标Favicon" class="headerlink" title="13. 设置网站的图标Favicon"></a>13. 设置网站的图标Favicon</h1><p><strong>具体方法实现</strong></p>
<p>找一张（32*32）的<code>ico</code>图标，并将图标名称改为<code>favicon.ico</code>，然后把图标放在<code>/themes/next/source/images</code>里，并且修改主题配置文件：</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Put your favicon.ico into `hexo-site/source/` directory.</span></span><br><span class="line">favicon: <span class="string">/favicon.ico</span></span><br></pre></td></tr></table></figure>

<hr>
<h1 id="14-实现统计功能"><a href="#14-实现统计功能" class="headerlink" title="14. 实现统计功能"></a>14. 实现统计功能</h1><p><strong>实现效果图</strong><br><img src="http://upload-images.jianshu.io/upload_images/5308475-11cf11fe888748a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"></p>
<p>在主题的配置文件中，配置如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line"><span class="attr">post_wordcount:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<hr>
<h1 id="15-添加顶部加载条"><a href="#15-添加顶部加载条" class="headerlink" title="15. 添加顶部加载条"></a>15. 添加顶部加载条</h1><p><strong>实现效果图</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-2f5051d9f0352b90.gif?imageMogr2/auto-orient/strip" alt="img"></p>
<p><strong>具体实现方法</strong></p>
<p>打开<code>/themes/next/layout/_partials/head.swig</code>文件，添加红框上的代码<br><img src="http://upload-images.jianshu.io/upload_images/5308475-72a578a8e3eee672.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="img"><br>代码如下：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;script <span class="attribute">src</span>=<span class="string">"//cdn.bootcss.com/pace/1.0.2/pace.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;link <span class="attribute">href</span>=<span class="string">"//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css"</span> <span class="attribute">rel</span>=<span class="string">"stylesheet"</span>&gt;</span><br></pre></td></tr></table></figure>

<p>但是，默认的是粉色的，要改变颜色可以在<code>/themes/next/layout/_partials/head.swig</code>文件中添加如下代码（接在刚才link的后面）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.pace</span> <span class="selector-class">.pace-progress</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">background</span>: <span class="selector-id">#1E92FB</span>; <span class="comment">/*进度条颜色*/</span></span></span><br><span class="line">        height: 3px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.pace</span> <span class="selector-class">.pace-progress-inner</span> &#123;</span></span><br><span class="line"><span class="css">         <span class="selector-tag">box-shadow</span>: 0 0 10<span class="selector-tag">px</span> <span class="selector-id">#1E92FB</span>, 0 0 5<span class="selector-tag">px</span>     <span class="selector-id">#1E92FB</span>; <span class="comment">/*阴影颜色*/</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.pace</span> <span class="selector-class">.pace-activity</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">border-top-color</span>: <span class="selector-id">#1E92FB</span>;    <span class="comment">/*上边框颜色*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">border-left-color</span>: <span class="selector-id">#1E92FB</span>;    <span class="comment">/*左边框颜色*/</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>



<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>next config</title>
    <url>/archives/977f8a02.html</url>
    <content><![CDATA[<h1 id="NexT-主题基础设置"><a href="#NexT-主题基础设置" class="headerlink" title="NexT 主题基础设置"></a>NexT 主题基础设置</h1><h3 id="设置-菜单"><a href="#设置-菜单" class="headerlink" title="设置 菜单"></a>设置 菜单</h3><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 <a href="http://fontawesome.io/" target="_blank" rel="external nofollow noopener noreferrer">Font Awesome</a> 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。</p>
<ol>
<li>设定菜单内容，对应的字段是 <code>menu</code>。 菜单内容的设置格式是：<code>item name: link</code>。其中 <code>item name</code>是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。</li>
</ol>
<blockquote>
<p>NexT 默认的菜单项有（标注 ! 的项表示需要手动创建这个页面）：</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">键值</th>
<th align="left">设定值</th>
<th align="left">显示文本（简体中文）</th>
</tr>
</thead>
<tbody><tr>
<td align="left">home</td>
<td align="left"><code>home: /</code></td>
<td align="left">主页</td>
</tr>
<tr>
<td align="left">archives</td>
<td align="left"><code>archives: /archives</code></td>
<td align="left">归档页</td>
</tr>
<tr>
<td align="left">categories</td>
<td align="left"><code>categories: /categories</code></td>
<td align="left">分类页 !</td>
</tr>
<tr>
<td align="left">tags</td>
<td align="left"><code>tags: /tags</code></td>
<td align="left">标签页 !</td>
</tr>
<tr>
<td align="left">about</td>
<td align="left"><code>about: /about</code></td>
<td align="left">关于页面 !</td>
</tr>
<tr>
<td align="left">commonweal</td>
<td align="left"><code>commonweal: /404.html</code></td>
<td align="left">公益 404 !</td>
</tr>
</tbody></table>
<ul>
<li>设置菜单项的显示文本。Hexo 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 <code>languages/{language}.yml</code> （<code>{language}</code> 为你所使用的语言）。</li>
</ul>
<blockquote>
<blockquote>
<p>以简体中文为例，若你需要添加一个菜单项，比如 <code>something</code>。那么就需要修改简体中文对应的翻译文件 <code>languages/zh-Hans.yml</code>，在 <code>menu</code> 字段下添加一项： <code>something: 有料</code></p>
</blockquote>
</blockquote>
<ul>
<li>设定菜单项的图标，对应的字段是 <code>menu_icons</code>。 此设定格式是 <code>item name: icon name</code>，其中 <code>item name</code> 与上一步所配置的菜单名字对应，<code>icon name</code> 是 Font Awesome 图标的 名字。而 <code>enable</code> 可用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。</li>
</ul>
<h3 id="设置-侧栏"><a href="#设置-侧栏" class="headerlink" title="设置 侧栏"></a>设置 侧栏</h3><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。 可以通过修改 <strong>主题配置文件</strong> 中的 <code>sidebar</code> 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。</p>
<blockquote>
<p>已知侧栏在 <code>use motion: false</code> 的情况下不会展示。</p>
</blockquote>
<a id="more"></a>



<h2 id="集成常用的第三方服务"><a href="#集成常用的第三方服务" class="headerlink" title="集成常用的第三方服务"></a>集成常用的第三方服务</h2><h3 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h3><p>注意： baidu_analytics 不是你的百度 id 或者 百度统计 id</p>
<ol>
<li>登录 <a href="http://tongji.baidu.com/" target="_blank" rel="external nofollow noopener noreferrer">百度统计</a>， 定位到站点的代码获取页面</li>
<li>复制 <code>hm.js?</code> 后面那串统计脚本 id，如：</li>
</ol>
<p><img src="http://theme-next.iissnan.com/uploads/five-minutes-setup/analytics-baidu-id.png" alt="TNT"></p>
<ol start="3">
<li>编辑 <strong>主题配置文件</strong>， 修改字段 <code>baidu_analytics</code> 字段，值设置成你的百度统计脚本 id。</li>
</ol>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>辅助函数2</title>
    <url>/archives/69913370.html</url>
    <content><![CDATA[<h1 id="辅助函数-2"><a href="#辅助函数-2" class="headerlink" title="辅助函数 2"></a>辅助函数 2</h1><h2 id="条件函数"><a href="#条件函数" class="headerlink" title="条件函数"></a>条件函数</h2><h3 id="is-current"><a href="#is-current" class="headerlink" title="is_current"></a>is_current</h3><p>检查 <code>path</code> 是否符合目前页面的网址。开启 <code>strict</code> 选项启用严格比对。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;%- is<span class="constructor">_current(<span class="params">path</span>, [<span class="params">strict</span>])</span> %&gt;</span><br></pre></td></tr></table></figure>

<h3 id="is-home"><a href="#is-home" class="headerlink" title="is_home"></a>is_home</h3><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- is_home<span class="comment">()</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="is-post"><a href="#is-post" class="headerlink" title="is_post"></a>is_post</h3><p>检查当前页面是否为文章。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- is_post<span class="comment">()</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="is-page"><a href="#is-page" class="headerlink" title="is_page"></a>is_page</h3><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- is_page<span class="comment">()</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="is-archive"><a href="#is-archive" class="headerlink" title="is_archive"></a>is_archive</h3><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- is_archive<span class="comment">()</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="is-year"><a href="#is-year" class="headerlink" title="is_year"></a>is_year</h3><p>检查当前页面是否为年度归档页面。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- is_year<span class="comment">()</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="is-month"><a href="#is-month" class="headerlink" title="is_month"></a>is_month</h3><figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&lt;%- is_month() %&gt;</span><br></pre></td></tr></table></figure>

<h3 id="is-category"><a href="#is-category" class="headerlink" title="is_category"></a>is_category</h3><p>如果给定一个字符串作为参数，将会检查目前是否为指定分类。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- is_category<span class="comment">()</span> <span class="meta">%</span>&gt;</span><br><span class="line">&lt;<span class="meta">%</span>- is_category<span class="comment">('hobby')</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="is-tag"><a href="#is-tag" class="headerlink" title="is_tag"></a>is_tag</h3><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- is_tag<span class="comment">()</span> <span class="meta">%</span>&gt;</span><br><span class="line">&lt;<span class="meta">%</span>- is_tag<span class="comment">('hobby')</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>



<a id="more"></a>



<h2 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h2><h3 id="trim"><a href="#trim" class="headerlink" title="trim"></a>trim</h3><p>清除字符串开头和结尾的空格。</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&lt;%- <span class="keyword">trim</span>(<span class="keyword">string</span>) %&gt;</span><br></pre></td></tr></table></figure>

<h3 id="strip-html"><a href="#strip-html" class="headerlink" title="strip_html"></a>strip_html</h3><p>清除字符串中的 HTML 标签。</p>
<p><strong>示例：</strong></p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;%- strip<span class="constructor">_html('It\'<span class="params">s</span> <span class="params">not</span> &lt;<span class="params">b</span>&gt;<span class="params">important</span>&lt;<span class="operator">/</span><span class="params">b</span>&gt; <span class="params">anymore</span>!')</span> %&gt;</span><br><span class="line"><span class="comment">// It's not important anymore!</span></span><br></pre></td></tr></table></figure>

<h3 id="titlecase"><a href="#titlecase" class="headerlink" title="titlecase"></a>titlecase</h3><p>把字符串转换为正确的 Title case。</p>
<p><strong>示例：</strong></p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- titlecase<span class="comment">('this is an apple')</span> <span class="meta">%</span>&gt;</span><br><span class="line"><span class="attr"># This is an Apple</span></span><br></pre></td></tr></table></figure>

<h3 id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h3><p>使用 Markdown 解析字符串。</p>
<p><strong>示例：</strong></p>
<figure class="highlight vhdl"><table><tr><td class="code"><pre><span class="line">&lt;%- markdown(<span class="symbol">'make</span> me **<span class="keyword">strong</span>**') %&gt;</span><br><span class="line">// make me &lt;<span class="keyword">strong</span>&gt;<span class="keyword">strong</span>&lt;/<span class="keyword">strong</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><p>解析字符串。</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&lt;%- <span class="keyword">render</span>(str, engine, [options]) %&gt;</span><br></pre></td></tr></table></figure>

<h3 id="word-wrap"><a href="#word-wrap" class="headerlink" title="word_wrap"></a>word_wrap</h3><p>使每行的字符串长度不超过 <code>length</code>。<code>length</code> 预设为 80。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- word_wrap<span class="comment">(str, [length])</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<p><strong>示例：</strong></p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- word_wrap<span class="comment">('Once upon a time', 8)</span> <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// Once upon\n a time</span></span><br></pre></td></tr></table></figure>

<h3 id="truncate"><a href="#truncate" class="headerlink" title="truncate"></a>truncate</h3><p>移除超过 <code>length</code> 长度的字符串。<code>length</code> 的默认值是 30。</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&lt;%- truncate(<span class="keyword">text</span>, length) %&gt;</span><br></pre></td></tr></table></figure>

<p><strong>示例：</strong></p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&lt;%- truncate(<span class="string">'Once upon a time in a world far far away'</span>, &#123;length: <span class="number">17</span>&#125;) %&gt;</span><br><span class="line"><span class="comment">// Once upon a ti...</span></span><br><span class="line"></span><br><span class="line">&lt;%- truncate(<span class="string">'Once upon a time in a world far far away'</span>, &#123;length: <span class="number">17</span>, <span class="keyword">separator</span>: <span class="string">' '</span>&#125;) %&gt;</span><br><span class="line"><span class="comment">// Once upon a...</span></span><br><span class="line"></span><br><span class="line">&lt;%- truncate(<span class="string">'And they found that many people were sleeping better.'</span>, &#123;length: <span class="number">25</span>, omission: <span class="string">'... (continued)'</span>&#125;) %&gt;</span><br><span class="line"><span class="comment">// And they f... (continued)</span></span><br></pre></td></tr></table></figure>



<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>辅助函数3</title>
    <url>/archives/1e9603e6.html</url>
    <content><![CDATA[<h1 id="辅助函数-3"><a href="#辅助函数-3" class="headerlink" title="辅助函数 3"></a>辅助函数 3</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><h3 id="partial"><a href="#partial" class="headerlink" title="partial"></a>partial</h3><p>载入其他模板文件，您可在 <code>locals</code> 设定区域变量。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- partial<span class="comment">(layout, [locals], [options])</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>cache</code></td>
<td align="left">缓存（使用 Fragment cache）</td>
<td align="left"><code>false</code></td>
</tr>
<tr>
<td align="left"><code>only</code></td>
<td align="left">限制局部变量。在模板中只能使用 <code>locals</code> 中设定的变量。</td>
<td align="left"><code>false</code></td>
</tr>
</tbody></table>
<h3 id="fragment-cache"><a href="#fragment-cache" class="headerlink" title="fragment_cache"></a>fragment_cache</h3><p>局部缓存。它储存局部内容，下次使用时就能直接使用缓存。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;%- fragment<span class="constructor">_cache(<span class="params">id</span>, <span class="params">fn</span>)</span>;</span><br></pre></td></tr></table></figure>

<p><strong>示例：</strong></p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line">&lt;%- fragment_cache(<span class="string">'header'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;  </span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class="line">&#125;) %&gt;</span><br></pre></td></tr></table></figure>





<h2 id="日期与时间"><a href="#日期与时间" class="headerlink" title="日期与时间"></a>日期与时间</h2><h3 id="date"><a href="#date" class="headerlink" title="date"></a>date</h3><p>插入格式化的日期。<code>date</code> 可以是 UNIX 时间、ISO 字符串、Date 对象或 <a href="http://momentjs.com/" target="_blank" rel="external nofollow noopener noreferrer">Moment.js</a> 对象。<code>format</code> 默认为 <code>date_format</code> 配置信息。</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&lt;%- <span class="keyword">date</span>(<span class="keyword">date</span>, [<span class="keyword">format</span>]) %&gt;</span><br></pre></td></tr></table></figure>

<p><strong>示例：</strong></p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- date<span class="comment">(Date.now()</span>) <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// 2013-01-01</span></span><br><span class="line"></span><br><span class="line">&lt;<span class="meta">%</span>- date<span class="comment">(Date.now()</span>, <span class="string">'YYYY/M/D'</span>) <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// Jan 1 2013</span></span><br></pre></td></tr></table></figure>

<h3 id="date-xml"><a href="#date-xml" class="headerlink" title="date_xml"></a>date_xml</h3><p>插入 XML 格式的日期。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- date_xml<span class="comment">(date)</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<p><strong>示例：</strong></p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- date_xml<span class="comment">(Date.now()</span>) <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// 2013-01-01T00:00:00.000Z</span></span><br></pre></td></tr></table></figure>

<h3 id="time"><a href="#time" class="headerlink" title="time"></a>time</h3><p>插入格式化的时间。<code>format</code> 默认为 <code>time_format</code> 配置信息。</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&lt;%- time(<span class="keyword">date</span>, [<span class="keyword">format</span>]) %&gt;</span><br></pre></td></tr></table></figure>

<p><strong>示例：</strong></p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- time<span class="comment">(Date.now()</span>) <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// 13:05:12</span></span><br><span class="line"></span><br><span class="line">&lt;<span class="meta">%</span>- time<span class="comment">(Date.now()</span>, <span class="string">'h:mm:ss a'</span>) <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// 1:05:12 pm</span></span><br></pre></td></tr></table></figure>

<h3 id="full-date"><a href="#full-date" class="headerlink" title="full_date"></a>full_date</h3><p>插入格式化的日期和时间。</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&lt;%- full_date(<span class="keyword">date</span>, [<span class="keyword">format</span>]) %&gt;</span><br></pre></td></tr></table></figure>

<p><strong>示例：</strong></p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- full_date<span class="comment">(new Date()</span>) <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// Jan 1, 2013 0:00:00</span></span><br><span class="line"></span><br><span class="line">&lt;<span class="meta">%</span>- full_date<span class="comment">(new Date()</span>, <span class="string">'dddd, MMMM Do YYYY, h:mm:ss a'</span>) <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// Tuesday, January 1st 2013, 12:00:00 am</span></span><br></pre></td></tr></table></figure>





<a id="more"></a>



<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="list-categories"><a href="#list-categories" class="headerlink" title="list_categories"></a>list_categories</h3><p>插入分类列表。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- list_categories<span class="comment">([options])</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>orderby</code></td>
<td align="left">分类排列方式</td>
<td align="left">name</td>
</tr>
<tr>
<td align="left"><code>order</code></td>
<td align="left">分类排列顺序。<code>1</code>, <code>asc</code> 升序；<code>-1</code>, <code>desc</code> 降序。</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left"><code>show_count</code></td>
<td align="left">显示每个分类的文章总数</td>
<td align="left">true</td>
</tr>
<tr>
<td align="left"><code>style</code></td>
<td align="left">分类列表的显示方式。使用 <code>list</code> 以无序列表（unordered list）方式显示。</td>
<td align="left">list</td>
</tr>
<tr>
<td align="left"><code>separator</code></td>
<td align="left">分类间的分隔符号。只有在 <code>style</code> 不是 <code>list</code> 时有用。</td>
<td align="left">,</td>
</tr>
<tr>
<td align="left"><code>depth</code></td>
<td align="left">要显示的分类层级。<code>0</code> 显示所有层级的分类；<code>-1</code> 和 <code>0</code> 很类似，但是显示不分层级；<code>1</code> 只显示第一层的分类。</td>
<td align="left">0</td>
</tr>
<tr>
<td align="left"><code>class</code></td>
<td align="left">分类列表的 class 名称。</td>
<td align="left">category</td>
</tr>
<tr>
<td align="left"><code>transform</code></td>
<td align="left">改变分类名称显示方法的函数</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>suffix</code></td>
<td align="left">为链接添加前缀</td>
<td align="left">None</td>
</tr>
</tbody></table>
<p><strong>用例:</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;%<span class="selector-tag">-</span> <span class="selector-tag">list_categories</span>(<span class="selector-tag">post</span><span class="selector-class">.categories</span>, &#123; </span><br><span class="line">  <span class="attribute">class</span>: <span class="string">'post-category'</span>,  </span><br><span class="line">  <span class="built_in">transform</span>(str) &#123;   </span><br><span class="line">    return <span class="built_in">titlecase</span>(str); </span><br><span class="line">  &#125;</span><br><span class="line">&#125;) %&gt; </span><br><span class="line"></span><br><span class="line">&lt;%<span class="selector-tag">-</span> <span class="selector-tag">list_categories</span>(<span class="selector-tag">post</span><span class="selector-class">.categories</span>, &#123;  </span><br><span class="line">    <span class="attribute">class</span>: <span class="string">'post-category'</span>,  </span><br><span class="line">    <span class="built_in">transform</span>(str) &#123;   </span><br><span class="line">      return str.<span class="built_in">toUpperCase</span>(); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;) %&gt;</span><br></pre></td></tr></table></figure>

<h3 id="list-tags"><a href="#list-tags" class="headerlink" title="list_tags"></a>list_tags</h3><p>插入标签列表。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- list_tags<span class="comment">([options])</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<p><strong>补充：</strong></p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
<th align="left">预设值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>amount</code></td>
<td align="left">要显示的标签数量（0 = 无限制）</td>
<td align="left">0</td>
</tr>
</tbody></table>
<h3 id="list-archives"><a href="#list-archives" class="headerlink" title="list_archives"></a>list_archives</h3><p>插入归档列表。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- list_archives<span class="comment">([options])</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>type</code></td>
<td align="left">类型。此设定可为 <code>yearly</code> 或 <code>monthly</code>。</td>
<td align="left">monthly</td>
</tr>
<tr>
<td align="left"><code>format</code></td>
<td align="left">日期格式</td>
<td align="left">MMMM YYYY</td>
</tr>
</tbody></table>
<h3 id="list-posts"><a href="#list-posts" class="headerlink" title="list_posts"></a>list_posts</h3><p>插入文章列表。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- list_posts<span class="comment">([options])</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="tagcloud"><a href="#tagcloud" class="headerlink" title="tagcloud"></a>tagcloud</h3><p>插入标签云。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- tagcloud<span class="comment">([tags], [options])</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>min_font</code></td>
<td align="left">最小字体尺寸</td>
<td align="left">10</td>
</tr>
<tr>
<td align="left"><code>max_font</code></td>
<td align="left">最大字体尺寸</td>
<td align="left">20</td>
</tr>
<tr>
<td align="left"><code>unit</code></td>
<td align="left">字体尺寸的单位</td>
<td align="left">px</td>
</tr>
<tr>
<td align="left"><code>amount</code></td>
<td align="left">标签总量</td>
<td align="left">40</td>
</tr>
<tr>
<td align="left"><code>color</code></td>
<td align="left">使用颜色</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>start_color</code></td>
<td align="left">开始的颜色。您可使用十六进位值（<code>#b700ff</code>），rgba（<code>rgba(183, 0, 255, 1)</code>），hsla（<code>hsla(283, 100%, 50%, 1)</code>）或 <a href="http://www.w3.org/TR/css3-color/#svg-color" target="_blank" rel="external nofollow noopener noreferrer">颜色关键字</a>。此变量仅在 <code>color</code> 参数开启时才有用。</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>end_color</code></td>
<td align="left">结束的颜色。您可使用十六进位值（<code>#b700ff</code>），rgba（<code>rgba(183, 0, 255, 1)</code>），hsla（<code>hsla(283, 100%, 50%, 1)</code>）或 <a href="http://www.w3.org/TR/css3-color/#svg-color" target="_blank" rel="external nofollow noopener noreferrer">颜色关键字</a>。此变量仅在 <code>color</code> 参数开启时才有用。</td>
<td align="left"></td>
</tr>
</tbody></table>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>辅助函数4</title>
    <url>/archives/80f29645.html</url>
    <content><![CDATA[<h1 id="辅助函数-4"><a href="#辅助函数-4" class="headerlink" title="辅助函数 4"></a>辅助函数 4</h1><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="paginator"><a href="#paginator" class="headerlink" title="paginator"></a>paginator</h3><p>插入分页链接。</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&lt;%- paginator(options) %&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>base</code></td>
<td align="left">基础网址</td>
<td align="left">/</td>
</tr>
<tr>
<td align="left"><code>format</code></td>
<td align="left">网址格式</td>
<td align="left">page/%d/</td>
</tr>
<tr>
<td align="left"><code>total</code></td>
<td align="left">分页总数</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left"><code>current</code></td>
<td align="left">目前页数</td>
<td align="left">0</td>
</tr>
<tr>
<td align="left"><code>prev_text</code></td>
<td align="left">上一页链接的文字。仅在 <code>prev_next</code> 设定开启时才有用。</td>
<td align="left">Prev</td>
</tr>
<tr>
<td align="left"><code>next_text</code></td>
<td align="left">下一页链接的文字。仅在 <code>prev_next</code> 设定开启时才有用。</td>
<td align="left">Next</td>
</tr>
<tr>
<td align="left"><code>space</code></td>
<td align="left">空白文字</td>
<td align="left">…</td>
</tr>
<tr>
<td align="left"><code>prev_next</code></td>
<td align="left">显示上一页和下一页的链接</td>
<td align="left">true</td>
</tr>
<tr>
<td align="left"><code>end_size</code></td>
<td align="left">显示于两侧的页数</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left"><code>mid_size</code></td>
<td align="left">显示于中间的页数</td>
<td align="left">2</td>
</tr>
<tr>
<td align="left"><code>show_all</code></td>
<td align="left">显示所有页数。如果开启此参数的话，<code>end_size</code> 和 <code>mid_size</code> 就没用了。</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>escape</code></td>
<td align="left">Escape HTML tags</td>
<td align="left">true</td>
</tr>
</tbody></table>
<p><strong>Examples:</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;%<span class="selector-tag">-</span> <span class="selector-tag">paginator</span>(&#123;  </span><br><span class="line">  <span class="attribute">prev_text</span>: <span class="string">'&lt;'</span>, </span><br><span class="line">  next_text: <span class="string">'&gt;'</span></span><br><span class="line">&#125;) %&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Rendered as --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1/"</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1/"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">2</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/3/"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/3/"</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">&lt;%- paginator(&#123;  </span><br><span class="line">  prev_text: '&lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fa fa-angle-left"</span>&gt;&lt;/i&gt;', </span><br><span class="line">  next_text: '&lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fa fa-angle-right"</span>&gt;&lt;/i&gt;', </span><br><span class="line">  escape: <span class="literal">false</span></span><br><span class="line">&#125;) %&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Rendered as --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1/"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-left"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1/"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">2</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/3/"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/3/"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="search-form"><a href="#search-form" class="headerlink" title="search_form"></a>search_form</h3><p>插入 Google 搜索框。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- search_form<span class="comment">(options)</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>class</code></td>
<td align="left">表单的 class name</td>
<td align="left">search-form</td>
</tr>
<tr>
<td align="left"><code>text</code></td>
<td align="left">搜索提示文字</td>
<td align="left">Search</td>
</tr>
<tr>
<td align="left"><code>button</code></td>
<td align="left">显示搜索按钮。此参数可为布尔值（boolean）或字符串，当设定是字符串的时候，即为搜索按钮的文字。</td>
<td align="left">false</td>
</tr>
</tbody></table>
<h3 id="number-format"><a href="#number-format" class="headerlink" title="number_format"></a>number_format</h3><p>格式化数字。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;%- number<span class="constructor">_format(<span class="params">number</span>, [<span class="params">options</span>])</span> %&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>precision</code></td>
<td align="left">数字精度。此选项可为 <code>false</code> 或非负整数。</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>delimiter</code></td>
<td align="left">千位数分隔符号</td>
<td align="left">,</td>
</tr>
<tr>
<td align="left"><code>separator</code></td>
<td align="left">整数和小数之间的分隔符号</td>
<td align="left">.</td>
</tr>
</tbody></table>
<h3 id="meta-generator"><a href="#meta-generator" class="headerlink" title="meta_generator"></a>meta_generator</h3><p>Inserts <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta" target="_blank" rel="external nofollow noopener noreferrer">generator tag</a>.</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&lt;%- meta_generator() %&gt;</span><br></pre></td></tr></table></figure>

<p><strong>Examples:</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">meta_generator</span>() %&gt;</span></span><br><span class="line">// <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"generator"</span> <span class="attr">content</span>=<span class="string">"Hexo 4.0.0"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="open-graph"><a href="#open-graph" class="headerlink" title="open_graph"></a>open_graph</h3><p>插入 open graph 资源。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;%- <span class="keyword">open</span><span class="constructor">_graph([<span class="params">options</span>])</span> %&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>title</code></td>
<td align="left">页面标题 (<code>og:title</code>)</td>
<td align="left"><code>page.title</code></td>
</tr>
<tr>
<td align="left"><code>type</code></td>
<td align="left">页面类型 (<code>og:type</code>)</td>
<td align="left">blog</td>
</tr>
<tr>
<td align="left"><code>url</code></td>
<td align="left">页面网址 (<code>og:url</code>)</td>
<td align="left"><code>url</code></td>
</tr>
<tr>
<td align="left"><code>image</code></td>
<td align="left">页面图片 (<code>og:image</code>)</td>
<td align="left">内容中的图片</td>
</tr>
<tr>
<td align="left"><code>site_name</code></td>
<td align="left">网站名称 (<code>og:site_name</code>)</td>
<td align="left"><code>config.title</code></td>
</tr>
<tr>
<td align="left"><code>description</code></td>
<td align="left">页面描述 (<code>og:description</code>)</td>
<td align="left">内容摘要或前 200 字</td>
</tr>
<tr>
<td align="left"><code>twitter_card</code></td>
<td align="left">Twitter 卡片类型 (<code>twitter:card</code>)</td>
<td align="left">summary</td>
</tr>
<tr>
<td align="left"><code>twitter_id</code></td>
<td align="left">Twitter ID (<code>twitter:creator</code>)</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>twitter_site</code></td>
<td align="left">Twitter 网站 (<code>twitter:site</code>)</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>google_plus</code></td>
<td align="left">Google+ 个人资料链接</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>fb_admins</code></td>
<td align="left">Facebook 管理者 ID</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>fb_app_id</code></td>
<td align="left">Facebook 应用程序 ID</td>
<td align="left"></td>
</tr>
</tbody></table>
<h3 id="toc"><a href="#toc" class="headerlink" title="toc"></a>toc</h3><p>解析内容中的标题标签 (h1~h6) 并插入目录。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- toc<span class="comment">(str, [options])</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>class</code></td>
<td align="left">Class 名称</td>
<td align="left">toc</td>
</tr>
<tr>
<td align="left"><code>list_number</code></td>
<td align="left">显示编号</td>
<td align="left">true</td>
</tr>
<tr>
<td align="left"><code>max_depth</code></td>
<td align="left">生成 TOC 的最大深度</td>
<td align="left">6</td>
</tr>
<tr>
<td align="left"><code>min_depth</code></td>
<td align="left">生成 TOC 的最小深度</td>
<td align="left">1</td>
</tr>
</tbody></table>
<p><strong>示例：</strong></p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- toc<span class="comment">(page.content)</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>



<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Troubleshooting</title>
    <url>/archives/323d63c3.html</url>
    <content><![CDATA[<h1 id="Hexo-Troubleshooting"><a href="#Hexo-Troubleshooting" class="headerlink" title="Hexo Troubleshooting"></a>Hexo Troubleshooting</h1><h2 id="插件安装问题"><a href="#插件安装问题" class="headerlink" title="插件安装问题"></a>插件安装问题</h2><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">npm ERR! <span class="keyword">node</span><span class="title">-waf</span> configure build</span><br></pre></td></tr></table></figure>

<p>当您尝试安装以 C/C++ 或其他非 JavaScript 语言所编写的插件时，可能会遇到此类问题，请确认您已经在电脑上安装相对应的编译器。</p>
<h2 id="在-Jade-或-Swig-遍历资料"><a href="#在-Jade-或-Swig-遍历资料" class="headerlink" title="在 Jade 或 Swig 遍历资料"></a>在 Jade 或 Swig 遍历资料</h2><p>Hexo 使用 <a href="https://github.com/hexojs/warehouse" target="_blank" rel="external nofollow noopener noreferrer">Warehouse</a> 存储资料，它不是一般数组所以必须先进行类型转型才能遍历。</p>


<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> post <span class="keyword">in</span> site.posts.toArray() %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>



<h2 id="Git-部署问题"><a href="#Git-部署问题" class="headerlink" title="Git 部署问题"></a>Git 部署问题</h2><h3 id="RPC-failed"><a href="#RPC-failed" class="headerlink" title="RPC failed"></a>RPC failed</h3><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">error: </span>RPC failed; result=22, HTTP code = 403</span><br><span class="line">fatal: 'username.github.io' does not appear to be a git repository</span><br></pre></td></tr></table></figure>

<p>请确认您已经在电脑上 <a href="https://help.github.com/articles/set-up-git" target="_blank" rel="external nofollow noopener noreferrer">配置 git</a>，或改用 HTTPS 库（repository）地址。</p>
<h3 id="Error-ENOENT-no-such-file-or-directory"><a href="#Error-ENOENT-no-such-file-or-directory" class="headerlink" title="Error: ENOENT: no such file or directory"></a>Error: ENOENT: no such file or directory</h3><p>如果你遇到了这个错误，有可能是你的文件名、分类或者标签的名字混淆了大写和小写，你可以尝试检查每一个标签和分类的名称，是否大小写一致来修复这一问题。</p>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>小问题</category>
      </categories>
      <tags>
        <tag>bugs</tag>
      </tags>
  </entry>
  <entry>
    <title>linux errors</title>
    <url>/archives/3595bc05.html</url>
    <content><![CDATA[<h1 id="EMFILE-amp-ENOSPC-amp-EMPERM"><a href="#EMFILE-amp-ENOSPC-amp-EMPERM" class="headerlink" title="EMFILE &amp; ENOSPC &amp; EMPERM"></a>EMFILE &amp; ENOSPC &amp; EMPERM</h1><h2 id="EMFILE-错误"><a href="#EMFILE-错误" class="headerlink" title="EMFILE 错误"></a>EMFILE 错误</h2><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Error: </span>EMFILE, too many open files</span><br></pre></td></tr></table></figure>

<p>虽然 Node.js 有非阻塞 I/O，同步 I/O 的数量仍被系统所限制，在生成大量静态文件的时候，您可能会碰到 EMFILE 错误，您可以尝试提高同步 I/O 的限制数量来解决此问题。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">ulimit</span> -n 10000</span></span><br></pre></td></tr></table></figure>

<p>（这一命令只对Linux系统有效）</p>
<h2 id="ENOSPC-错误-（Linux）"><a href="#ENOSPC-错误-（Linux）" class="headerlink" title="ENOSPC 错误 （Linux）"></a>ENOSPC 错误 （Linux）</h2><p>运行 <code>$ hexo server</code> 命令有时会返回这样的错误：</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Error: </span>watch ENOSPC ...</span><br></pre></td></tr></table></figure>

<p>它可以用过运行 <code>$ npm dedupe</code> 来解决，如果不起作用的话，可以尝试在 Linux 终端中运行下列命令：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="built_in">fs</span>.inotify.max_user_watches=<span class="number">524288</span> | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure>

<p>这将会提高你能监视的文件数量。</p>
<h2 id="EMPERM-Error-Windows-Subsystem-for-Linux"><a href="#EMPERM-Error-Windows-Subsystem-for-Linux" class="headerlink" title="EMPERM Error (Windows Subsystem for Linux)"></a>EMPERM Error (Windows Subsystem for Linux)</h2><p>在执行 <code>hexo server</code> 后返回如下错误：</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Error: </span>watch /path/to/hexo/theme/ EMPERM</span><br></pre></td></tr></table></figure>

<p>这是由于你使用的 WSL 版本不支持监听文件系统改动。 最新版的 WSL 已经解决了这一问题。</p>
<p>您也仍然可以通过先使用 <code>hexo g</code> 生成文件然后将其作为静态服务器运行来从 WSL 环境运行服务器：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo<span class="built_in"> server </span>-s</span><br></pre></td></tr></table></figure>





<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>小问题</category>
      </categories>
      <tags>
        <tag>bugs</tag>
      </tags>
  </entry>
  <entry>
    <title>YAML Troubleshooting</title>
    <url>/archives/6b7fbf69.html</url>
    <content><![CDATA[<h1 id="YAML-Troubleshooting"><a href="#YAML-Troubleshooting" class="headerlink" title="YAML Troubleshooting"></a>YAML Troubleshooting</h1><h2 id="YAML-解析错误"><a href="#YAML-解析错误" class="headerlink" title="YAML 解析错误"></a>YAML 解析错误</h2><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">JS-YAML: incomplete <span class="built_in">explicit</span> mapping pair; a <span class="built_in">key</span> node <span class="built_in">is</span> missed <span class="built_in">at</span> line <span class="number">18</span>, column <span class="number">29</span>:      last_updated: Last updated: <span class="built_in">%s</span></span><br></pre></td></tr></table></figure>

<p>如果 YAML 字符串中包含冒号（<code>:</code>）的话，请加上引号。</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">JS-YAML: bad indentation <span class="keyword">of</span> <span class="keyword">a</span> mapping entry <span class="keyword">at</span> <span class="built_in">line</span> <span class="number">18</span>, column <span class="number">31</span>:      		      </span><br><span class="line">	  last_updated:<span class="string">"Last updated: %s"</span></span><br></pre></td></tr></table></figure>

<p>请确认您使用空格进行缩进（Soft tab），并确认冒号后有加上一个空格。</p>
<h2 id="模板渲染错误"><a href="#模板渲染错误" class="headerlink" title="模板渲染错误"></a>模板渲染错误</h2><p>有的时候你在执行 <code>hexo generate</code> 时会返回以下错误信息：</p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line">FATAL Something<span class="comment">'s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span></span><br><span class="line">Template render <span class="keyword">error</span>: (unknown path)</span><br></pre></td></tr></table></figure>



<p>这表明你的文件中存在一些不可被识别的字符，比如不可见的零宽度字符。有可能你的新文章存在这个问题，或者你在修改配置文件时导致了这个错误。</p>
<p>检查你的 <code>_config.yml</code> 文件中是否漏掉了列表前的空格。</p>
<p>这个是错误的：</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">plugins:</span><br><span class="line"><span class="bullet">- </span>hexo-generator-feed</span><br><span class="line"><span class="bullet">- </span>hexo-generator-sitemap</span><br></pre></td></tr></table></figure>

<p>正确的应该是这样：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">plugins:  </span><br><span class="line"><span class="bullet">  - </span>hexo-generator-feed  </span><br><span class="line"><span class="bullet">  - </span>hexo-generator-sitemap</span><br></pre></td></tr></table></figure>









<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>小问题</category>
      </categories>
      <tags>
        <tag>bugs</tag>
      </tags>
  </entry>
  <entry>
    <title>辅助函数</title>
    <url>/archives/989bfe87.html</url>
    <content><![CDATA[<h1 id="辅助函数（Helpers）"><a href="#辅助函数（Helpers）" class="headerlink" title="辅助函数（Helpers）"></a>辅助函数（Helpers）</h1><p>辅助函数帮助您在模版中快速插入内容。辅助函数不能在源文件中使用。</p>
<h2 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h2><h3 id="url-for"><a href="#url-for" class="headerlink" title="url_for"></a>url_for</h3><p>在路径前加上根路径，从 Hexo 2.7 开始您应该使用此函数而不是 <code>config.root + path</code>。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- url_for<span class="comment">(path, [option])</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>relative</code></td>
<td align="left">是否输出相对链接</td>
<td align="left"><code>config.relative_link</code> 的值</td>
</tr>
</tbody></table>
<p><strong>示例：</strong></p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">_config.yml</span><br><span class="line"><span class="symbol">root:</span> <span class="meta-keyword">/blog/</span></span><br></pre></td></tr></table></figure>

<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- url_for<span class="comment">('/a/path')</span> <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// /blog/a/path</span></span><br></pre></td></tr></table></figure>

<p>是否输出相对链接，默认遵循配置文件中 <code>relative_link</code> 的值</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;%- url<span class="constructor">_for('<span class="operator">/</span><span class="params">css</span><span class="operator">/</span><span class="params">style</span>.<span class="params">css</span>')</span> %&gt;</span><br><span class="line"><span class="comment">// ../../css/style.css</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 覆盖配置 </span></span><br><span class="line"><span class="comment"> * 即使配置文件中启用了 relative_link，你也可以使用 relative 参数禁用相对链接输出，反之亦然 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&lt;%- url<span class="constructor">_for('<span class="operator">/</span><span class="params">css</span><span class="operator">/</span><span class="params">style</span>.<span class="params">css</span>', &#123;<span class="params">relative</span>: <span class="params">false</span>&#125;)</span> %&gt;</span><br><span class="line"><span class="comment">// /css/style.css</span></span><br></pre></td></tr></table></figure>





<h3 id="relative-url"><a href="#relative-url" class="headerlink" title="relative_url"></a>relative_url</h3><p>取得与 <code>from</code> 相对的 <code>to</code> 路径。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- relative_url<span class="comment">(from, to)</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<p><strong>示例：</strong></p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;%- relative<span class="constructor">_url('<span class="params">foo</span><span class="operator">/</span><span class="params">bar</span><span class="operator">/</span>', '<span class="params">css</span><span class="operator">/</span><span class="params">style</span>.<span class="params">css</span>')</span> %&gt;</span><br><span class="line"><span class="comment">// ../../css/style.css</span></span><br></pre></td></tr></table></figure>



<h3 id="gravatar"><a href="#gravatar" class="headerlink" title="gravatar"></a>gravatar</h3><p>根据邮箱地址返回 Gravatar 头像 URL。</p>
<p>如果你不指定 <code>options</code> 参数，将会应用默认参数。否则，你可以将其设置为一个数字，这个数字将会作为 Gravatar 的大小参数。最后，如果你设置它一个对象，它将会被转换为 Gravatar 的一个查询字符串参数。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- gravatar<span class="comment">(email, [options])</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>s</code></td>
<td align="left">图片大小</td>
<td align="left">80</td>
</tr>
<tr>
<td align="left"><code>d</code></td>
<td align="left">默认头像</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>f</code></td>
<td align="left">强制使用默认图象</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>r</code></td>
<td align="left">头像等级限制</td>
<td align="left"></td>
</tr>
</tbody></table>
<p><strong>示例：</strong></p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">&lt;<span class="symbol">%-</span> gravatar('a<span class="title">@abc.com</span>', <span class="number">40</span>) %&gt;</span><br><span class="line">// https://www.gravatar.com/avatar/b<span class="number">9</span>b<span class="number">00e66</span><span class="keyword">c</span><span class="number">6</span>b<span class="number">8</span>a<span class="number">70</span>f<span class="number">88</span><span class="keyword">c</span><span class="number">73</span>cb<span class="number">6</span>bdb<span class="number">06787</span>?s=<span class="number">40</span></span><br><span class="line"></span><br><span class="line">&lt;<span class="symbol">%-</span> gravatar('a<span class="title">@abc.com</span>' &#123;s: <span class="number">40</span>, d: 'https://via.placeholder.com/<span class="number">150</span>'&#125;) %&gt;// https://www.gravatar.com/avatar/b<span class="number">9</span>b<span class="number">00e66</span><span class="keyword">c</span><span class="number">6</span>b<span class="number">8</span>a<span class="number">70</span>f<span class="number">88</span><span class="keyword">c</span><span class="number">73</span>cb<span class="number">6</span>bdb<span class="number">06787</span>?s=<span class="number">40</span>&amp;d=https<span class="symbol">%3</span>A<span class="symbol">%2</span>F<span class="symbol">%2</span>Fvia.placeholder.com<span class="symbol">%2</span>F<span class="number">150</span></span><br></pre></td></tr></table></figure>



<h3 id="full-url-for"><a href="#full-url-for" class="headerlink" title="full_url_for"></a>full_url_for</h3><p>在路径前加上根路径和域名。输出会被自动转码。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- full_url_for<span class="comment">(path)</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<p><strong>示例：</strong></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">_config.yml</span><br><span class="line"><span class="string">url:</span> <span class="string">https:</span><span class="comment">//example.com/blog # example</span></span><br></pre></td></tr></table></figure>

<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- full_url_for<span class="comment">('/a/path')</span> <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// https://example.com/blog/a/path</span></span><br></pre></td></tr></table></figure>



<a id="more"></a>



<h2 id="HTML-标签"><a href="#HTML-标签" class="headerlink" title="HTML 标签"></a>HTML 标签</h2><h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><p>载入 CSS 文件。<code>path</code> 可以是数组或字符串，如果 <code>path</code> 开头不是 <code>/</code> 或任何协议，则会自动加上根路径；如果后面没有加上 <code>.css</code> 扩展名的话，也会自动加上。Use object type for custom attributes.</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- css<span class="comment">(path, ...)</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<p><strong>示例：</strong></p>
<figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby"> css(<span class="string">'style.css'</span>) </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">// <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/style.css"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby"> css([<span class="string">'style.css'</span>, <span class="string">'screen.css'</span>]) </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">// <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/style.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml">// <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/screen.css"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby"> css(&#123; <span class="symbol">href:</span> <span class="string">'style.css'</span>, <span class="symbol">integrity:</span> <span class="string">'foo'</span> &#125;) </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">// <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/style.css"</span> <span class="attr">integrity</span>=<span class="string">"foo"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby"> css([&#123; <span class="symbol">href:</span> <span class="string">'style.css'</span>, <span class="symbol">integrity:</span> <span class="string">'foo'</span> &#125;, &#123; <span class="symbol">href:</span> <span class="string">'screen.css'</span>, <span class="symbol">integrity:</span> <span class="string">'bar'</span> &#125;])</span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">// <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/style.css"</span> <span class="attr">integrity</span>=<span class="string">"foo"</span>&gt;</span></span></span><br><span class="line"><span class="xml">// <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/screen.css"</span> <span class="attr">integrity</span>=<span class="string">"bar"</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- js<span class="comment">(path, ...)</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<p><strong>示例：</strong></p>
<figure class="highlight erb"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby"> js(<span class="string">'script.js'</span>) </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">// <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/script.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby"> js([<span class="string">'script.js'</span>, <span class="string">'gallery.js'</span>]) </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">// <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/script.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">// <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/gallery.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby"> js(&#123; <span class="symbol">src:</span> <span class="string">'script.js'</span>, <span class="symbol">integrity:</span> <span class="string">'foo'</span>, <span class="symbol">async:</span> <span class="literal">true</span> &#125;) </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">// <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/script.js"</span> <span class="attr">integrity</span>=<span class="string">"foo"</span> <span class="attr">async</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby"> js([&#123; <span class="symbol">src:</span> <span class="string">'script.js'</span>, <span class="symbol">integrity:</span> <span class="string">'foo'</span> &#125;, &#123; <span class="symbol">src:</span> <span class="string">'gallery.js'</span>, <span class="symbol">integrity:</span> <span class="string">'bar'</span> &#125;]) </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">// <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/script.js"</span> <span class="attr">integrity</span>=<span class="string">"foo"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">// <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/gallery.js"</span> <span class="attr">integrity</span>=<span class="string">"bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h3 id="link-to"><a href="#link-to" class="headerlink" title="link_to"></a>link_to</h3><p>插入链接。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;%- link<span class="constructor">_to(<span class="params">path</span>, [<span class="params">text</span>], [<span class="params">options</span>])</span> %&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>external</code></td>
<td align="left">在新视窗打开链接</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>class</code></td>
<td align="left">Class 名称</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>id</code></td>
<td align="left">ID</td>
<td align="left"></td>
</tr>
</tbody></table>
<p><strong>示例：</strong></p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;%- link<span class="constructor">_to('<span class="params">http</span>:<span class="operator">/</span><span class="operator">/</span><span class="params">www</span>.<span class="params">google</span>.<span class="params">com</span>')</span> %&gt;</span><br><span class="line"><span class="comment">// &lt;a href="http://www.google.com" title="http://www.google.com"&gt;http://www.google.com&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- link<span class="constructor">_to('<span class="params">http</span>:<span class="operator">/</span><span class="operator">/</span><span class="params">www</span>.<span class="params">google</span>.<span class="params">com</span>', 'Google')</span> %&gt;</span><br><span class="line"><span class="comment">// &lt;a href="http://www.google.com" title="Google"&gt;Google&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- link<span class="constructor">_to('<span class="params">http</span>:<span class="operator">/</span><span class="operator">/</span><span class="params">www</span>.<span class="params">google</span>.<span class="params">com</span>', 'Google', &#123;<span class="params">external</span>: <span class="params">true</span>&#125;)</span> %&gt;</span><br><span class="line"><span class="comment">// &lt;a href="http://www.google.com" title="Google" target="_blank" rel="noopener"&gt;Google&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="mail-to"><a href="#mail-to" class="headerlink" title="mail_to"></a>mail_to</h3><p>插入电子邮箱链接。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">&lt;%- mail<span class="constructor">_to(<span class="params">path</span>, [<span class="params">text</span>], [<span class="params">options</span>])</span> %&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>class</code></td>
<td align="left">Class 名称</td>
</tr>
<tr>
<td align="left"><code>id</code></td>
<td align="left">ID</td>
</tr>
<tr>
<td align="left"><code>subject</code></td>
<td align="left">邮件主题</td>
</tr>
<tr>
<td align="left"><code>cc</code></td>
<td align="left">抄送（CC）</td>
</tr>
<tr>
<td align="left"><code>bcc</code></td>
<td align="left">密送（BCC）</td>
</tr>
<tr>
<td align="left"><code>body</code></td>
<td align="left">邮件内容</td>
</tr>
</tbody></table>
<p><strong>示例：</strong></p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- mail_to<span class="comment">('a@abc.com')</span> <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// &lt;a href="mailto:a@abc.com" title="a@abc.com"&gt;a@abc.com&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;<span class="meta">%</span>- mail_to<span class="comment">('a@abc.com', 'Email')</span> <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// &lt;a href="mailto:a@abc.com" title="Email"&gt;Email&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="image-tag"><a href="#image-tag" class="headerlink" title="image_tag"></a>image_tag</h3><p>插入图片。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- image_tag<span class="comment">(path, [options])</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>alt</code></td>
<td align="left">图片的替代文字</td>
</tr>
<tr>
<td align="left"><code>class</code></td>
<td align="left">Class 名称</td>
</tr>
<tr>
<td align="left"><code>id</code></td>
<td align="left">ID</td>
</tr>
<tr>
<td align="left"><code>width</code></td>
<td align="left">图片宽度</td>
</tr>
<tr>
<td align="left"><code>height</code></td>
<td align="left">图片高度</td>
</tr>
</tbody></table>
<h3 id="favicon-tag"><a href="#favicon-tag" class="headerlink" title="favicon_tag"></a>favicon_tag</h3><p>插入 favicon。</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&lt;%- favicon_tag(path) %&gt;</span><br></pre></td></tr></table></figure>



<h3 id="feed-tag"><a href="#feed-tag" class="headerlink" title="feed_tag"></a>feed_tag</h3><p>插入 feed 链接。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- feed_tag<span class="comment">(path, [options])</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>title</code></td>
<td align="left">Feed 标题</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>type</code></td>
<td align="left">Feed 类型</td>
<td align="left">atom</td>
</tr>
</tbody></table>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>插件</title>
    <url>/archives/def84ee6.html</url>
    <content><![CDATA[<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><p>Hexo 有强大的插件系统，使您能轻松扩展功能而不用修改核心模块的源码。在 Hexo 中有两种形式的插件：</p>
<h3 id="脚本（Scripts）"><a href="#脚本（Scripts）" class="headerlink" title="脚本（Scripts）"></a>脚本（Scripts）</h3><p>如果您的代码很简单，建议您编写脚本，您只需要把 JavaScript 文件放到 <code>scripts</code> 文件夹，在启动时就会自动载入。</p>
<h3 id="插件（Packages）"><a href="#插件（Packages）" class="headerlink" title="插件（Packages）"></a>插件（Packages）</h3><p>如果您的代码较复杂，或是您想要发布到 NPM 上，建议您编写插件。首先，在 <code>node_modules</code> 文件夹中建立文件夹，文件夹名称开头必须为 <code>hexo-</code>，如此一来 Hexo 才会在启动时载入，否则 Hexo 将会忽略它。</p>
<p>文件夹内至少要包含 2 个文件：一个是主程序，另一个是 <code>package.json</code>，描述插件的用途和所依赖的插件。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── <span class="selector-tag">index</span><span class="selector-class">.js</span></span><br><span class="line">└── <span class="selector-tag">package</span><span class="selector-class">.json</span></span><br></pre></td></tr></table></figure>

<p><code>package.json</code> 中至少要包含 <code>name</code>, <code>version</code>, <code>main</code> 属性，例如：</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">package</span>.<span class="title">json</span></span></span><br><span class="line"><span class="class">&#123;</span>  </span><br><span class="line">   <span class="string">"name"</span>: <span class="string">"hexo-my-plugin"</span>,  </span><br><span class="line">   <span class="string">"version"</span>: <span class="string">"0.0.1"</span>,  </span><br><span class="line">   <span class="string">"main"</span>: <span class="string">"index"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>您可以使用 Hexo 提供的官方工具插件来加速开发：</p>
<ul>
<li><a href="https://github.com/hexojs/hexo-fs" target="_blank" rel="external nofollow noopener noreferrer">hexo-fs</a>：文件 IO</li>
<li><a href="https://github.com/hexojs/hexo-util" target="_blank" rel="external nofollow noopener noreferrer">hexo-util</a>：工具程式</li>
<li><a href="https://github.com/hexojs/hexo-i18n" target="_blank" rel="external nofollow noopener noreferrer">hexo-i18n</a>：本地化（i18n）</li>
<li><a href="https://github.com/hexojs/hexo-pagination" target="_blank" rel="external nofollow noopener noreferrer">hexo-pagination</a>：生成分页资料</li>
</ul>
<p><strong>发布插件：</strong> 略</p>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>国际化</title>
    <url>/archives/b349ec92.html</url>
    <content><![CDATA[<h1 id="国际化（i18n）"><a href="#国际化（i18n）" class="headerlink" title="国际化（i18n）"></a>国际化（i18n）</h1><p>若要让您的网站以不同语言呈现，您可使用国际化（internationalization）功能。请先在 <code>_config.yml</code> 中调整 <code>language</code> 设定，这代表的是预设语言，您也可设定多个语言来调整预设语言的顺位。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="attribute">language</span>: zh-tw</span><br><span class="line"></span><br><span class="line"><span class="attribute">language</span>: </span><br><span class="line">- zh-tw</span><br><span class="line">- en</span><br></pre></td></tr></table></figure>

<h3 id="语言文件"><a href="#语言文件" class="headerlink" title="语言文件"></a>语言文件</h3><p>语言文件可以使用 YAML 或 JSON 编写，并放在主题文件夹中的 <code>languages</code> 文件夹。您可以在语言文件中使用 <a href="https://github.com/alexei/sprintf.js" target="_blank" rel="external nofollow noopener noreferrer">printf 格式</a>。</p>
<h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><p>在模板中，透过 <code>__</code> 或 <code>_p</code> 辅助函数，即可取得翻译后的字符串，前者用于一般使用；而后者用于复数字符串。例如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">en.yml</span></span><br><span class="line"><span class="attr">index:</span>  </span><br><span class="line">  <span class="attr">title:</span> <span class="string">Home</span>  </span><br><span class="line">  <span class="attr">add:</span> <span class="string">Add</span>  </span><br><span class="line">  <span class="attr">video:</span>    </span><br><span class="line">    <span class="attr">zero:</span> <span class="literal">No</span> <span class="string">videos</span>   </span><br><span class="line">    <span class="attr">one:</span> <span class="string">One</span> <span class="string">video</span>   </span><br><span class="line">    <span class="attr">other:</span> <span class="string">%d</span> <span class="string">videos</span></span><br></pre></td></tr></table></figure>

<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>= __<span class="comment">('index.title')</span> <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// Home</span></span><br><span class="line"></span><br><span class="line">&lt;<span class="meta">%</span>= _p<span class="comment">('index.video', 3)</span> <span class="meta">%</span>&gt;</span><br><span class="line"><span class="comment">// 3 videos</span></span><br></pre></td></tr></table></figure>



<a id="more"></a>



<h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><p>您可在 front-matter 中指定该页面的语言，也可在 <code>_config.yml</code> 中修改 <code>i18n_dir</code> 设定，让 Hexo 自动侦测。</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">i18n_dir:</span> :lang</span><br></pre></td></tr></table></figure>

<p><code>i18n_dir</code> 的预设值是 <code>:lang</code>，也就是说 Hexo 会捕获网址中的第一段以检测语言，举例来说：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">/<span class="built_in">index</span>.html =&gt; <span class="keyword">en</span></span><br><span class="line">/archives/<span class="built_in">index</span>.html =&gt; <span class="keyword">en</span></span><br><span class="line">/zh-tw/<span class="built_in">index</span>.html =&gt; zh-tw</span><br></pre></td></tr></table></figure>



<p>捕获到的字符串唯有在语言文件存在的情况下，才会被当作是语言，因此例二 <code>/archives/index.html</code> 中的 <code>archives</code> 就不被当成是语言。</p>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>变量</title>
    <url>/archives/13ffbe88.html</url>
    <content><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
<th align="left">类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>site</code></td>
<td align="left"><a href="https://hexo.io/zh-cn/docs/variables#网站变量" target="_blank" rel="external nofollow noopener noreferrer">网站变量</a></td>
<td align="left"><code>object</code>; 见 <a href="https://hexo.io/zh-cn/docs/variables#网站变量" target="_blank" rel="external nofollow noopener noreferrer">网站变量</a></td>
</tr>
<tr>
<td align="left"><code>page</code></td>
<td align="left">针对该页面的内容以及 front-matter 中自定义的变量。</td>
<td align="left"><code>object</code>; 见 <a href="https://hexo.io/zh-cn/docs/variables#页面变量" target="_blank" rel="external nofollow noopener noreferrer">页面变量</a></td>
</tr>
<tr>
<td align="left"><code>config</code></td>
<td align="left">网站配置</td>
<td align="left"><code>object</code> (站点的配置文件)</td>
</tr>
<tr>
<td align="left"><code>theme</code></td>
<td align="left">主题配置。继承自网站配置。</td>
<td align="left"><code>object</code> (主题配置文件)</td>
</tr>
<tr>
<td align="left"><code>_</code> (单下划线)</td>
<td align="left"><a href="https://lodash.com/" target="_blank" rel="external nofollow noopener noreferrer">Lodash</a> 函数库</td>
<td align="left"><a href="https://lodash.com/" target="_blank" rel="external nofollow noopener noreferrer">Lodash</a> 文档</td>
</tr>
<tr>
<td align="left"><code>path</code></td>
<td align="left">当前页面的路径（不含根路径）</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>url</code></td>
<td align="left">当前页面的完整网址</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>env</code></td>
<td align="left">环境变量</td>
<td align="left">???</td>
</tr>
</tbody></table>
<h3 id="网站变量"><a href="#网站变量" class="headerlink" title="网站变量"></a>网站变量</h3><table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
<th align="left">类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>site.posts</code></td>
<td align="left">所有文章</td>
<td align="left"><code>array</code> of <code>post</code> objects</td>
</tr>
<tr>
<td align="left"><code>site.pages</code></td>
<td align="left">所有分页</td>
<td align="left"><code>array</code> of <code>page</code> objects</td>
</tr>
<tr>
<td align="left"><code>site.categories</code></td>
<td align="left">所有分类</td>
<td align="left"><code>object</code>，包含了站点全部的分类</td>
</tr>
<tr>
<td align="left"><code>site.tags</code></td>
<td align="left">所有标签</td>
<td align="left"><code>array</code>，包含了站点全部的标签</td>
</tr>
</tbody></table>
<a id="more"></a>



<h3 id="页面变量"><a href="#页面变量" class="headerlink" title="页面变量"></a>页面变量</h3><p><strong>页面（page）</strong></p>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
<th align="left">类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>page.title</code></td>
<td align="left">页面标题</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>page.date</code></td>
<td align="left">页面建立日期</td>
<td align="left"><a href="http://momentjs.com/" target="_blank" rel="external nofollow noopener noreferrer">Moment.js</a> 对象</td>
</tr>
<tr>
<td align="left"><code>page.updated</code></td>
<td align="left">页面更新日期</td>
<td align="left"><a href="http://momentjs.com/" target="_blank" rel="external nofollow noopener noreferrer">Moment.js</a> 对象</td>
</tr>
<tr>
<td align="left"><code>page.comments</code></td>
<td align="left">留言是否开启</td>
<td align="left"><code>boolean</code></td>
</tr>
<tr>
<td align="left"><code>page.layout</code></td>
<td align="left">布局名称</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>page.content</code></td>
<td align="left">页面的完整内容</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>page.excerpt</code></td>
<td align="left">页面摘要</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>page.more</code></td>
<td align="left">除了页面摘要的其余内容</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>page.source</code></td>
<td align="left">页面原始路径</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>page.full_source</code></td>
<td align="left">页面的完整原始路径</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>page.path</code></td>
<td align="left">页面网址（不含根路径）。我们通常在主题中使用 <code>url_for(page.path)</code>。</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>page.permalink</code></td>
<td align="left">页面的完整网址</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>page.prev</code></td>
<td align="left">上一个页面。如果此为第一个页面则为 <code>null</code>。</td>
<td align="left"><code>string</code> or <code>null</code></td>
</tr>
<tr>
<td align="left"><code>page.next</code></td>
<td align="left">下一个页面。如果此为最后一个页面则为 <code>null</code>。</td>
<td align="left"><code>string</code> or <code>null</code></td>
</tr>
<tr>
<td align="left"><code>page.raw</code></td>
<td align="left">文章的原始内容</td>
<td align="left">???</td>
</tr>
<tr>
<td align="left"><code>page.photos</code></td>
<td align="left">文章的照片（用于相簿）</td>
<td align="left"><code>array</code></td>
</tr>
<tr>
<td align="left"><code>page.link</code></td>
<td align="left">文章的外部链接（用于链接文章）</td>
<td align="left"><code>string</code></td>
</tr>
</tbody></table>
<p><strong>文章 (post):</strong> 与 <code>page</code> 布局相同，但新增以下变量。</p>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
<th align="left">类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>page.published</code></td>
<td align="left">如果该文章已发布则为 true</td>
<td align="left"><code>boolean</code></td>
</tr>
<tr>
<td align="left"><code>page.categories</code></td>
<td align="left">该文章的所有分类</td>
<td align="left"><code>array</code> of ???</td>
</tr>
<tr>
<td align="left"><code>page.tags</code></td>
<td align="left">该文章的所有标签</td>
<td align="left"><code>array</code> of ???</td>
</tr>
</tbody></table>
<p><strong>首页（index）</strong></p>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
<th align="left">类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>page.per_page</code></td>
<td align="left">每页显示的文章数量</td>
<td align="left"><code>number</code></td>
</tr>
<tr>
<td align="left"><code>page.total</code></td>
<td align="left">总页数</td>
<td align="left"><code>number</code></td>
</tr>
<tr>
<td align="left"><code>page.current</code></td>
<td align="left">目前页数</td>
<td align="left"><code>number</code></td>
</tr>
<tr>
<td align="left"><code>page.current_url</code></td>
<td align="left">目前分页的网址</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>page.posts</code></td>
<td align="left">本页文章 (<a href="https://hexojs.github.io/warehouse/" target="_blank" rel="external nofollow noopener noreferrer">Data Model</a>)</td>
<td align="left"><code>object</code></td>
</tr>
<tr>
<td align="left"><code>page.prev</code></td>
<td align="left">上一页的页数。如果此页是第一页的话则为 <code>0</code>。</td>
<td align="left"><code>number</code></td>
</tr>
<tr>
<td align="left"><code>page.prev_link</code></td>
<td align="left">上一页的网址。如果此页是第一页的话则为 <code>&#39;&#39;</code>。</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>page.next</code></td>
<td align="left">下一页的页数。如果此页是最后一页的话则为 <code>0</code>。</td>
<td align="left"><code>number</code></td>
</tr>
<tr>
<td align="left"><code>page.next_link</code></td>
<td align="left">下一页的网址。如果此页是最后一页的话则为 <code>&#39;&#39;</code>。</td>
<td align="left"><code>string</code></td>
</tr>
<tr>
<td align="left"><code>page.path</code></td>
<td align="left">当前页面的路径（不含根目录）。我们通常在主题中使用 <code>url_for(page.path)</code>。</td>
<td align="left"><code>string</code></td>
</tr>
</tbody></table>
<p><strong>归档 (archive)</strong>：与 <code>index</code> 布局相同，但新增以下变量。</p>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
<th align="left">类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>page.archive</code></td>
<td align="left">等于 <code>true</code></td>
<td align="left"><code>boolean</code></td>
</tr>
<tr>
<td align="left"><code>page.year</code></td>
<td align="left">年份归档 (4位)</td>
<td align="left"><code>number</code></td>
</tr>
<tr>
<td align="left"><code>page.month</code></td>
<td align="left">月份归档 (没有前导零的2位数)</td>
<td align="left"><code>number</code></td>
</tr>
</tbody></table>
<p><strong>分类 (category)</strong>：与 <code>index</code> 布局相同，但新增以下变量。</p>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
<th align="left">类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>page.category</code></td>
<td align="left">分类名称</td>
<td align="left"><code>string</code></td>
</tr>
</tbody></table>
<p><strong>标签 (tag)</strong>：与 <code>index</code> 布局相同，但新增以下变量。</p>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
<th align="left">类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>page.tag</code></td>
<td align="left">标签名称</td>
<td align="left"><code>string</code></td>
</tr>
</tbody></table>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>模板</title>
    <url>/archives/f6010553.html</url>
    <content><![CDATA[<h1 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h1><p>模板决定了网站内容的呈现方式，每个主题至少都应包含一个 <code>index</code> 模板，以下是各页面相对应的模板名称：</p>
<table>
<thead>
<tr>
<th align="left">模板</th>
<th align="left">用途</th>
<th align="left">回退</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>index</code></td>
<td align="left">首页</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>post</code></td>
<td align="left">文章</td>
<td align="left"><code>index</code></td>
</tr>
<tr>
<td align="left"><code>page</code></td>
<td align="left">分页</td>
<td align="left"><code>index</code></td>
</tr>
<tr>
<td align="left"><code>archive</code></td>
<td align="left">归档</td>
<td align="left"><code>index</code></td>
</tr>
<tr>
<td align="left"><code>category</code></td>
<td align="left">分类归档</td>
<td align="left"><code>archive</code></td>
</tr>
<tr>
<td align="left"><code>tag</code></td>
<td align="left">标签归档</td>
<td align="left"><code>archive</code></td>
</tr>
</tbody></table>
<h2 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h2><p>如果页面结构类似，例如两个模板都有页首（Header）和页脚（Footer），您可考虑通过「布局」让两个模板共享相同的结构。一个布局文件必须要能显示 <code>body</code> 变量的内容，如此一来模板的内容才会被显示，举例来说：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">index.ejs</span><br><span class="line">index</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">layout.ejs</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">%-</span> <span class="attr">body</span> %&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>生成：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span>index<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>每个模板都默认使用 <code>layout</code> 布局，您可在 front-matter 指定其他布局，或是设为 <code>false</code> 来关闭布局功能，您甚至可在布局中再使用其他布局来建立嵌套布局。</p>
<a id="more"></a>



<h2 id="局部模版（Partial）"><a href="#局部模版（Partial）" class="headerlink" title="局部模版（Partial）"></a>局部模版（Partial）</h2><p>局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">partial/header.ejs</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"logo"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">config.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">index</span>.ejs</span><br><span class="line">&lt;%- partial(<span class="string">'partial/header'</span>) %&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> id=<span class="string">"content"</span>&gt;Home page&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure>

<p>生成：</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">&lt;h1 <span class="built_in">id</span>=<span class="string">"logo"</span>&gt;My Site&lt;/h1&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"content"</span>&gt;Home page&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure>



<h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><p>您可以在局部模板中指定局部变量并使用。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">partial/header.ejs<span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"logo"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">title</span> %&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">index</span>.ejs</span><br><span class="line">&lt;%- partial(<span class="string">'partial/header'</span>, &#123;title: <span class="string">'Hello World'</span>&#125;) %&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> id=<span class="string">"content"</span>&gt;Home page&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure>

<p>生成：</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">&lt;h1 <span class="built_in">id</span>=<span class="string">"logo"</span>&gt;Hello World&lt;/h1&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"content"</span>&gt;Home page&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure>



<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>如果您的主题太过于复杂，或是需要生成的文件量太过于庞大，可能会大幅降低性能，除了简化主题外，您可以考虑 Hexo 2.7 新增的局部缓存（Fragment Caching） 功能。</p>
<p>本功能借鉴于 <a href="http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching" target="_blank" rel="external nofollow noopener noreferrer">Ruby on Rails</a>，它储存局部内容，下次便能直接使用缓存内容，可以减少文件夹查询并使生成速度更快。</p>
<p>它可用于页首、页脚、侧边栏等文件不常变动的位置，举例来说：</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line">&lt;%- fragment_cache(<span class="string">'header'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;  </span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>如果您使用局部模板的话，可以更简单：</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">&lt;%- <span class="keyword">partial</span>(<span class="string">'header'</span>, &#123;&#125;, &#123;cache: <span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>fragment_cache()</code> 将会缓存第一次的渲染结果，并在之后直接输出缓存的结果。因此只有在不同页面的渲染结果都相同时才应使用局部缓存。<br>比如，在配置中启用了 <code>relative_link</code> 后不应该使用局部缓存，因为相对链接在每个页面可能不同。</p>
</blockquote>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>permalink-theme</title>
    <url>/archives/b950aab4.html</url>
    <content><![CDATA[<h1 id="永久链接（Permalinks）"><a href="#永久链接（Permalinks）" class="headerlink" title="永久链接（Permalinks）"></a>永久链接（Permalinks）</h1><p>您可以在 <code>_config.yml</code> 配置中调整网站的永久链接或者在每篇文章的 Front-matter 中指定。</p>
<h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>除了下列变量外，您还可使用 Front-matter 中的所有属性。</p>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>:year</code></td>
<td align="left">文章的发表年份（4 位数）</td>
</tr>
<tr>
<td align="left"><code>:month</code></td>
<td align="left">文章的发表月份（2 位数）</td>
</tr>
<tr>
<td align="left"><code>:i_month</code></td>
<td align="left">文章的发表月份（去掉开头的零）</td>
</tr>
<tr>
<td align="left"><code>:day</code></td>
<td align="left">文章的发表日期 (2 位数)</td>
</tr>
<tr>
<td align="left"><code>:i_day</code></td>
<td align="left">文章的发表日期（去掉开头的零）</td>
</tr>
<tr>
<td align="left"><code>:hour</code></td>
<td align="left">文章发表时的小时 (2 位数)</td>
</tr>
<tr>
<td align="left"><code>:minute</code></td>
<td align="left">文章发表时的分钟 (2 位数)</td>
</tr>
<tr>
<td align="left"><code>:title</code></td>
<td align="left">文件名称</td>
</tr>
<tr>
<td align="left"><code>:post_title</code></td>
<td align="left">文章标题</td>
</tr>
<tr>
<td align="left"><code>:id</code></td>
<td align="left">文章 ID (<em>not persistent across cache reset</em>)</td>
</tr>
<tr>
<td align="left"><code>:category</code></td>
<td align="left">分类。如果文章没有分类，则是 <code>default_category</code> 配置信息。</td>
</tr>
</tbody></table>
<p>您可在 <code>permalink_defaults</code> 参数下调整永久链接中各变量的默认值：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">permalink_default<span class="variable">s:</span>  </span><br><span class="line">  <span class="keyword">lan</span><span class="variable">g:</span> <span class="keyword">en</span></span><br></pre></td></tr></table></figure>

<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>假设 <code>source/_posts</code> 文件夹中有个 <code>hello-world.md</code>，包含以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013</span><span class="number">-07</span><span class="number">-14</span> <span class="number">17</span><span class="string">:01:34</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">foo</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">bar</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">结果</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>:year/:month/:day/:title/</code></td>
<td align="left">2013/07/14/hello-world/</td>
</tr>
<tr>
<td align="left"><code>:year-:month-:day-:title.html</code></td>
<td align="left">2013-07-14-hello-world.html</td>
</tr>
<tr>
<td align="left"><code>:category/:title</code></td>
<td align="left">foo/bar/hello-world</td>
</tr>
</tbody></table>
<h3 id="多语种支持"><a href="#多语种支持" class="headerlink" title="多语种支持"></a>多语种支持</h3><p>若要建立一个多语种的网站，您可修改 <code>new_post_name</code> 和 <code>permalink</code> 参数，如下：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="symbol">new_post_name:</span> <span class="symbol">:lang/</span><span class="symbol">:title</span>.md</span><br><span class="line"><span class="symbol">permalink:</span> <span class="symbol">:lang/</span><span class="symbol">:title/</span></span><br></pre></td></tr></table></figure>

<p>当您建立新文章时，文章会被储存到：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> <span class="string">"Hello World"</span> --lang tw</span><br><span class="line"># =&gt; <span class="keyword">source</span><span class="regexp">/_posts/</span>tw<span class="regexp">/Hello-World.md</span></span><br></pre></td></tr></table></figure>

<p>而网址会是：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span>localhost:<span class="number">4000</span><span class="regexp">/tw/</span>hello-world<span class="regexp">/</span></span><br></pre></td></tr></table></figure>



<hr>
<h1 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h1><p>创建 Hexo 主题非常容易，您只要在 <code>themes</code> 文件夹内，新增一个任意名称的文件夹，并修改 <code>_config.yml</code> 内的 <code>theme</code> 设定，即可切换主题。一个主题可能会有以下的结构：</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── languages</span><br><span class="line">├── <span class="keyword">layout</span></span><br><span class="line">├── scripts</span><br><span class="line">└── <span class="keyword">source</span></span><br></pre></td></tr></table></figure>

<h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>主题的配置文件。修改时会自动更新，无需重启服务器。</p>
<h3 id="languages"><a href="#languages" class="headerlink" title="languages"></a>languages</h3><p>语言文件夹。请参见 <a href="https://hexo.io/zh-cn/docs/internationalization" target="_blank" rel="external nofollow noopener noreferrer">国际化 (i18n)</a>。</p>
<h3 id="layout"><a href="#layout" class="headerlink" title="layout"></a>layout</h3><p>布局文件夹。用于存放主题的模板文件，决定了网站内容的呈现方式，Hexo 内建 <a href="https://github.com/node-swig/swig-templates" target="_blank" rel="external nofollow noopener noreferrer">Swig</a> 模板引擎，您可以另外安装插件来获得 <a href="https://github.com/hexojs/hexo-renderer-ejs" target="_blank" rel="external nofollow noopener noreferrer">EJS</a>、<a href="https://github.com/hexojs/hexo-renderer-haml" target="_blank" rel="external nofollow noopener noreferrer">Haml</a> 或 <a href="https://github.com/hexojs/hexo-renderer-jade" target="_blank" rel="external nofollow noopener noreferrer">Jade</a> 支持，Hexo 根据模板文件的扩展名来决定所使用的模板引擎</p>
<p>例如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">layout</span><span class="selector-class">.ejs</span>   <span class="selector-tag">-</span> 使用 <span class="selector-tag">EJS</span></span><br><span class="line"><span class="selector-tag">layout</span><span class="selector-class">.swig</span>  <span class="selector-tag">-</span> 使用 <span class="selector-tag">Swig</span></span><br></pre></td></tr></table></figure>



<h3 id="scripts"><a href="#scripts" class="headerlink" title="scripts"></a>scripts</h3><p>脚本文件夹。在启动时，Hexo 会载入此文件夹内的 JavaScript 文件，请参见 <a href="https://hexo.io/zh-cn/docs/plugins" target="_blank" rel="external nofollow noopener noreferrer">插件</a> 以获得更多信息。</p>
<h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p>资源文件夹，除了模板以外的 Asset，例如 CSS、JavaScript 文件等，都应该放在这个文件夹中。文件或文件夹开头名称为 <code>_</code>（下划线线）或隐藏的文件会被忽略。</p>
<p>如果文件可以被渲染的话，会经过解析然后储存到 <code>public</code> 文件夹，否则会直接拷贝到 <code>public</code> 文件夹。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Nunjucks Errors</title>
    <url>/archives/a429e99c.html</url>
    <content><![CDATA[<h1 id="hexo-Nunjucks-Errors-解决方法"><a href="#hexo-Nunjucks-Errors-解决方法" class="headerlink" title="hexo Nunjucks Errors 解决方法"></a>hexo Nunjucks Errors 解决方法</h1><p><strong>Code：</strong></p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">Nunjucks Error:  [Line <span class="number">43</span>, Column <span class="number">43</span>] Error: Unable <span class="keyword">to</span> call `now`, which <span class="literal">is</span> undefined <span class="keyword">or</span> falsey</span><br><span class="line">    =====               Context Dump               =====</span><br><span class="line">    === (line<span class="built_in"> number</span> probably different from source) ===</span><br><span class="line">  <span class="number">38</span> | <span class="xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"left"</span>&gt;</span>分支名称<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line">  <span class="number">39</span> | <span class="xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"left"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">code</span>&gt;</span>gh-pages<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><span class="xml"> (GitHub) </span><span class="xml"><span class="tag">&lt;<span class="name">code</span>&gt;</span>coding-pages<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><span class="xml"> (Coding.net) </span><span class="xml"><span class="tag">&lt;<span class="name">code</span>&gt;</span>master<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><span class="xml"> (others)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line">  <span class="number">40</span> | &lt;/tr&gt;</span><br><span class="line">  <span class="number">41</span> | <span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">  42 | </span><span class="xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"left"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">code</span>&gt;</span>message<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">  43 | </span><span class="xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"left"</span>&gt;</span>自定义提交信息<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">  44 | </span><span class="xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"left"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">code</span>&gt;</span>Site updated: </span><span class="xquery">&#123;&#123; now(<span class="string">'YYYY-MM-DD HH:mm:ss'</span>) &#125;</span><span class="xml">&#125;<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">  45 | <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line">  <span class="number">46</span> | <span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">  47 | </span><span class="xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"left"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">code</span>&gt;</span>token<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">  48 | </span><span class="xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"left"</span>&gt;</span>Optional token value to authenticate with the repo. Prefix with </span><span class="xml"><span class="tag">&lt;<span class="name">code</span>&gt;</span>$<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><span class="xml"> to read token from environment variable<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">    =====             Context Dump Ends            =====</span></span><br></pre></td></tr></table></figure>



<p><strong>原文：</strong></p>
<p><img src="/images/Nunjucks_error.png" alt="md文档"></p>
<h2 id="泄露（Escape）内容"><a href="#泄露（Escape）内容" class="headerlink" title="泄露（Escape）内容"></a>泄露（Escape）内容</h2><p>Hexo 使用 <a href="http://mozilla.github.io/nunjucks/" target="_blank" rel="external nofollow noopener noreferrer">Nunjucks</a> 来解析文章（旧版本使用 <a href="http://paularmstrong.github.io/swig/" target="_blank" rel="external nofollow noopener noreferrer">Swig</a>，两者语法类似），内容若包含 {{ }}  或 {% %}  可能导致解析错误。</p>
<p>文章里出现了Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }} 的内容。然后 hexo 的文章渲染使用的是 Nunjucks ，他会将那几个大括号识别成自己的语法，这样生成的时候就会报错。<code>Unable to call now</code></p>
<p><strong>解决方法：</strong></p>
<p>您可以用 <code>raw</code> 标签包裹来避免潜在问题发生。</p>
<p>前后加： {% raw %} {% endraw %} </p>
<hr>
<p><img src="http://image.baidu.com/search/detail?ct=503316480&z=3&tn=baiduimagedetail&ipn=d&word=%E6%9D%A8%E8%B6%85%E8%B6%8A%E5%A4%B4%E5%83%8F%E5%9B%BE%E7%89%87%E5%8D%A1%E9%80%9A&step_word=&ie=utf-8&in=&cl=2&lm=-1&st=-1&hd=&latest=&copyright=&cs=2557770639,1590477966&os=1056480712,476593103&simid=3457548530,199525995&pn=0&rn=1&di=6820&ln=177&fr=&fmq=1582801173329_R&ic=&s=undefined&se=&sme=&tab=0&width=0&height=0&face=undefined&is=0,0&istype=2&ist=&jit=&bdtype=0&spn=0&pi=0&gsm=1e&objurl=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20181129%2F0f66ada5c7714420bbd682dfd70002a8.jpeg&rpstart=0&rpnum=0&adpicid=0&force=undefined" alt="美图"></p>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src="/images/mylogo.png" alt="logo"></p>
]]></content>
      <categories>
        <category>小问题</category>
      </categories>
      <tags>
        <tag>bugs</tag>
      </tags>
  </entry>
  <entry>
    <title>部署</title>
    <url>/archives/26b9d431.html</url>
    <content><![CDATA[<h1 id="7-部署"><a href="#7-部署" class="headerlink" title="7.部署"></a>7.部署</h1><h2 id="Project-page"><a href="#Project-page" class="headerlink" title="Project page"></a>Project page</h2><p>如果你更希望你的站点部署在 <code>&lt;你的 GitHub 用户名&gt;.github.io</code> 的子目录中，你的 repository 需要直接命名为子目录的名字，这样你的站点可以通过 <code>https://&lt;你的 GitHub 用户名&gt;.github.io/&lt;repository 的名字&gt;</code> 访问。              你需要检查你的 Hexo 配置文件，将 <code>url</code> 修改为 <code>https://&lt;你的 GitHub 用户名&gt;.github.io/&lt;repository 的名字&gt;</code>、将 <code>root</code> 的值修改为 <code>/&lt;repository 的名字&gt;/</code></p>
<p>您可同时使用多个 deployer，Hexo 会依照顺序执行每个 deployer。</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">- <span class="attribute">type</span>: git  </span><br><span class="line">  <span class="attribute">repo</span>:</span><br><span class="line">- <span class="attribute">type</span>: heroku  </span><br><span class="line">  <span class="attribute">repo</span>:</span><br></pre></td></tr></table></figure>



<blockquote>
<p><strong>缩进</strong></p>
</blockquote>
<blockquote>
<p>YAML依靠缩进来确定元素间的从属关系。因此，请确保每个deployer的缩进长度相同，并且使用空格缩进。</p>
</blockquote>
<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><ol>
<li>安装 hexo-deployer-git</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<ol>
<li>修改配置。</li>
</ol>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">deploy:</span>  </span><br><span class="line"><span class="symbol">  type:</span> git  </span><br><span class="line"><span class="symbol">  repo:</span> <span class="params">&lt;repository url&gt;</span> <span class="meta">#https:<span class="comment">//bitbucket.org/JohnSmith/johnsmith.bitbucket.io  </span></span></span><br><span class="line"><span class="symbol">  branch:</span> [branch]  </span><br><span class="line"><span class="symbol">  message:</span> [message]</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>repo</code></td>
<td align="left">库（Repository）地址</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>branch</code></td>
<td align="left">分支名称</td>
<td align="left"><code>gh-pages</code> (GitHub) <code>coding-pages</code> (Coding.net) <code>master</code> (others)</td>
</tr>
<tr>
<td align="left"><code>message</code></td>
<td align="left">自定义提交信息</td>
<td align="left">Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</td>
</tr>
<tr>
<td align="left"><code>token</code></td>
<td align="left">Optional token value to authenticate with the repo. Prefix with <code>$</code> to read token from environment variable</td>
<td align="left"></td>
</tr>
</tbody></table>
<ol>
<li><p>生成站点文件并推送至远程库。</p>
<ul>
<li>You will be prompted with username and password of the target repository, unless you authenticate with a token or ssh key.</li>
</ul>
<ul>
<li>hexo-deployer-git does not store your username and password. Use <a href="https://git-scm.com/docs/git-credential-cache" target="_blank" rel="external nofollow noopener noreferrer">git-credential-cache</a> to store them temporarily.</li>
</ul>
</li>
<li><p>登入 Github请在库设置（Repository Settings）中将默认分支设置为<code>_config.yml</code>配置中的分支名称。稍等片刻，您的站点就会显示在您的Github Pages中。</p>
</li>
</ol>
<h3 id="这一切是如何发生的？"><a href="#这一切是如何发生的？" class="headerlink" title="这一切是如何发生的？"></a>这一切是如何发生的？</h3><p>当执行 <code>hexo deploy</code> 时，Hexo 会将 <code>public</code> 目录中的文件和目录推送至 <code>_config.yml</code> 中指定的远端仓库和分支中，并且<strong>完全覆盖</strong>该分支下的已有内容。</p>
<blockquote>
<p><strong>使用 Git 管理站点目录的用户</strong></p>
<p>由于 Hexo 的部署默认使用分支 <code>master</code>，所以如果你同时正在使用 Git 管理你的站点目录，你应当注意你的部署分支应当不同于写作分支。<br>一个好的实践是将站点目录和 Pages 分别存放在两个不同的 Git 仓库中，可以有效避免相互覆盖。<br>Hexo 在部署你的站点生成的文件时并不会更新你的站点目录。因此你应该手动提交并推送你的写作分支。</p>
</blockquote>
<p>此外，如果您的 Github Pages 需要使用 CNAME 文件<strong>自定义域名</strong>，请将 CNAME 文件置于 <code>source</code> 目录下，只有这样 <code>hexo deploy</code> 才能将 CNAME 文件一并推送至部署分支。</p>
<p><strong>其他deployer：</strong><a href="https://hexo.io/zh-cn/docs/one-command-deployment" target="_blank" rel="external nofollow noopener noreferrer">参考</a></p>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器-生成器</title>
    <url>/archives/1393f011.html</url>
    <content><![CDATA[<h1 id="6-服务器"><a href="#6-服务器" class="headerlink" title="6.服务器"></a>6.服务器</h1><h2 id="hexo-server"><a href="#hexo-server" class="headerlink" title="hexo-server"></a>hexo-server</h2><p>如果您想要更改端口，或是在执行时遇到了 <code>EADDRINUSE</code> 错误，可以在执行时使用 <code>-p</code> 选项指定其他端口</p>
<h3 id="静态模式"><a href="#静态模式" class="headerlink" title="静态模式"></a>静态模式</h3><p>在静态模式下，服务器只处理 <code>public</code> 文件夹内的文件，而不会处理文件变动，在执行时，您应该先自行执行 <code>hexo generate</code>，此模式通常用于生产环境（production mode）下。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ hexo<span class="built_in"> server </span>-s</span><br></pre></td></tr></table></figure>



<h3 id="自定义-IP"><a href="#自定义-IP" class="headerlink" title="自定义 IP"></a>自定义 IP</h3><p>服务器默认运行在 <code>0.0.0.0</code>，您可以覆盖默认的 IP 设置，如下：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ hexo<span class="built_in"> server </span>-i 192.168.1.1</span><br></pre></td></tr></table></figure>

<p>指定这个参数后，您就只能通过该IP才能访问站点。</p>
<p><strong>例如：</strong></p>
<ul>
<li><p>对于一台使用无线网络的笔记本电脑，除了指向本机的<code>127.0.0.1</code>外，通常还有一个<code>192.168.*.*</code>的局域网IP，如果像上面那样使用<code>-i</code>参数，就不能用<code>127.0.0.1</code>来访问站点了。</p>
</li>
<li><p>对于有公网IP的主机，如果您指定一个局域网IP作为<code>-i</code>参数的值，那么就无法通过公网来访问站点。</p>
</li>
</ul>
<hr>
<h1 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h1><h3 id="监视文件变动"><a href="#监视文件变动" class="headerlink" title="监视文件变动"></a>监视文件变动</h3><p>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">generate</span> --watch</span><br></pre></td></tr></table></figure>



<h3 id="完成后部署"><a href="#完成后部署" class="headerlink" title="完成后部署"></a>完成后部署</h3><p>您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">generate</span> --deploy</span><br><span class="line">$ hexo deploy --<span class="keyword">generate</span></span><br></pre></td></tr></table></figure>



<blockquote>
<p>简写：<br>$ hexo g -d<br>$ hexo d -g</p>
</blockquote>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>数据文件夹</title>
    <url>/archives/7bfb7356.html</url>
    <content><![CDATA[<h1 id="5-数据文件"><a href="#5-数据文件" class="headerlink" title="5.数据文件"></a>5.数据文件</h1><p>有时您可能需要在主题中使用某些资料，而这些资料并不在文章内，并且是需要重复使用的，那么您可以考虑使用 Hexo 3.0 新增的「数据文件」功能。此功能会载入 <code>source/_data</code> 内的 YAML 或 JSON 文件，如此一来您便能在网站中复用这些文件了。</p>
<p>举例来说，在 <code>source/_data</code> 文件夹中新建 <code>menu.yml</code> 文件：</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Home:</span> /</span><br><span class="line"><span class="symbol">Gallery:</span> <span class="meta-keyword">/gallery/</span></span><br><span class="line"><span class="symbol">Archives:</span> <span class="meta-keyword">/archives/</span></span><br></pre></td></tr></table></figure>

<p>您就能在模板中使用这些资料：</p>
<figure class="highlight mojolicious"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="perl"> <span class="keyword">for</span> (var <span class="keyword">link</span> in site.data.menu) &#123; </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%=</span></span></span><span class="perl"> site.data.menu[<span class="keyword">link</span>] </span><span class="xml"><span class="tag"><span class="string">%&gt;"</span>&gt;</span> <span class="tag">&lt;<span class="name">%=</span></span></span><span class="perl"> <span class="keyword">link</span> </span><span class="xml"><span class="tag">%&gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="perl"> &#125; </span><span class="xml"><span class="tag">%&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>渲染结果如下 :</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span> Home <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/gallery/"</span>&gt;</span> Gallery <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/archives/"</span>&gt;</span> Archives <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>



<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>LF will be replaced by CRLF</title>
    <url>/archives/b76ba195.html</url>
    <content><![CDATA[<h2 id="git提交时”warning-LF-will-be-replaced-by-CRLF“提示"><a href="#git提交时”warning-LF-will-be-replaced-by-CRLF“提示" class="headerlink" title="git提交时”warning: LF will be replaced by CRLF“提示"></a>git提交时”warning: LF will be replaced by CRLF“提示</h2><p>当时在网上查了资料，发现很多的解决办法都是：修改git全局配置，禁止git自动将LF转化成CRLF。命令是：<code>git config --global core.autocrlf false</code>.</p>
<p><strong>LF和CRLF的真相是什么</strong></p>
<ol>
<li><p>LF和CRLF都是换行符，在各操作系统下，换行符是不一样的，Linux/UNIX下是LF,而Windows下是CRLF，早期的MAC OS是CR,后来的OS X在更换内核后和UNIX一样也是LF.<br>虽然靠谱的文本编辑器和 IDE 都支持这几种换行符，但文件在保存时总要有一个固定的标准啊，比如跨平台协作的项目源码，到底保存为哪种风格的换行符呢？</p>
</li>
<li><p>Git 由大名鼎鼎的 Linus 开发，因此推荐只将 UNIX 风格的换行符保存入库。但它也考虑到了跨平台协作的场景，并且提供了一个“换行符自动转换”功能。</p>
<pre><code>- 安装好 GitHub 的 Windows 客户端之后，这个功能默认处于“自动模式”。</code></pre><ul>
<li>当你在签出文件时，Git 试图将 UNIX 换行符（LF）替换为 Windows 的换行符（CRLF）；当你在提交文件时，它又试图将 CRLF 替换为 LF。</li>
<li>这样一来在提交代码的时候，git会认为你未修改内容的文件也认为是修改过的，然后提示你warning: LF will be replaced by CRLF这样的信息。</li>
</ul>
</li>
<li><p>上面的解决办法固然解决了很多人的问题，但是在某些情况下仍不适用。</p>
</li>
</ol>
<p><strong>有效的解决方法</strong></p>
<p>如果设置<code>core.autocrlf = false</code>，那么很可能会出现CRLF和LF混合的情况。<br>首先<code>core.autocrlf = true</code>在windows上才是正确的选择，那么如何避免<em>warning</em>呢？还要有以下几个步骤：</p>
<ul>
<li>添加<kbd>.gitattributes</kbd></li>
<li>设置<code>core.safecrlf = true</code></li>
<li>使用dos2unix、notepad++等工具来将LF转换成CRLF</li>
</ul>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><kbd><strong>LOGO:</strong></kbd></p>
]]></content>
      <categories>
        <category>小问题</category>
      </categories>
      <tags>
        <tag>bugs</tag>
      </tags>
  </entry>
  <entry>
    <title>资源文件夹</title>
    <url>/archives/eb477856.html</url>
    <content><![CDATA[<h1 id="4-资源文件夹"><a href="#4-资源文件夹" class="headerlink" title="4.资源文件夹"></a>4.资源文件夹</h1><p>资源（Asset）代表 <code>source</code> 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 <code>source/images</code> 文件夹中。然后通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们。</p>
<h2 id="文章资源文件夹"><a href="#文章资源文件夹" class="headerlink" title="文章资源文件夹"></a>文章资源文件夹</h2><p>对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 <code>config.yml</code> 文件中的 <code>post_asset_folder</code> 选项设为 <code>true</code> 来打开。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">_config</span>.</span></span>ymlpost_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p>
<h2 id="相对路径引用的标签插件"><a href="#相对路径引用的标签插件" class="headerlink" title="相对路径引用的标签插件"></a>相对路径引用的标签插件</h2><p>通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">asset_path</span> slug %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">asset_img</span> slug [title] %&#125;</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">asset_link</span> slug [title] %&#125;</span></span><br></pre></td></tr></table></figure>

<p><b>比如说：</b>当你打开文章资源文件夹功能后，你把一个 <code>example.jpg</code> 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 <code>![](/example.jpg)</code> ，它将 <em>不会</em> 出现在首页上。（但是它会在文章中按你期待的方式工作）</p>
<p>正确的引用图片方式是使用下列的标签插件而不是 markdown ：</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">&#123;<span class="symbol">%</span> asset_img <span class="built_in">example</span>.jpg This <span class="built_in">is</span> an <span class="built_in">example</span> <span class="built_in">image</span> <span class="symbol">%</span>&#125;</span><br></pre></td></tr></table></figure>

<p>通过这种方式，图片将会同时出现在文章和主页以及归档页中。</p>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><kbd><strong>LOGO:</strong></kbd></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>标签插件</title>
    <url>/archives/507239ef.html</url>
    <content><![CDATA[<h1 id="3-标签插件（Tag-Plugins）"><a href="#3-标签插件（Tag-Plugins）" class="headerlink" title="3.标签插件（Tag Plugins）"></a>3.标签插件（Tag Plugins）</h1><p>标签插件和 Front-matter 中的标签不同，它们是用于在文章中快速插入特定内容的插件。</p>
<h2 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h2><p>在文章中插入引言，可包含作者、来源和标题。</p>
<p><strong>别号：</strong> quote</p>
<figure class="highlight twig"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">blockquote</span> [author[, <span class="name">source</span>]] [link] [source_link_title] %&#125;</span></span><br><span class="line"><span class="xml">content</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endblockquote</span> %&#125;</span></span><br></pre></td></tr></table></figure>



<p><strong>样例</strong></p>
<p>没有提供参数，则只输出普通的 blockquote</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">blockquote</span> %&#125;</span></span><br><span class="line"><span class="xml">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endblockquote</span> %&#125;</span></span><br></pre></td></tr></table></figure>



<blockquote>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>
</blockquote>
<p><strong>引用书上的句子</strong></p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">blockquote</span> David Levithan, Wide Awake %&#125;</span></span><br><span class="line"><span class="xml">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endblockquote</span> %&#125;</span></span><br></pre></td></tr></table></figure>



<blockquote>
<p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<p><strong>David Levithan</strong>Wide Awake</p>
</blockquote>
<p><strong>引用 Twitter</strong></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote <span class="meta">@DevDocs</span> <span class="string">https:</span><span class="comment">//twitter.com/devdocs/status/356095192085962752 %&#125;</span></span><br><span class="line"><span class="string">NEW:</span> DevDocs now comes with syntax highlighting. <span class="string">http:</span><span class="comment">//devdocs.io</span></span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>



<blockquote>
<p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io/" target="_blank" rel="external nofollow noopener noreferrer">http://devdocs.io</a></p>
<p><strong>@DevDocs</strong><a href="https://twitter.com/devdocs/status/356095192085962752" target="_blank" rel="external nofollow noopener noreferrer">twitter.com/devdocs/status/356095192085962752</a></p>
</blockquote>
<p><strong>引用网络上的文章</strong></p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">blockquote </span>Seth Godin http://sethgodin.typepad.com/seths_blog/<span class="number">2009</span>/<span class="number">07</span>/welcome-to-island-<span class="keyword">marketing.html </span>Welcome to Island <span class="keyword">Marketing </span>%&#125;</span><br><span class="line"><span class="symbol">Every</span> interaction is <span class="keyword">both </span>precious <span class="keyword">and </span>an opportunity to delight.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>



<blockquote>
<p>Every interaction is both precious and an opportunity to delight.</p>
<p><strong>Seth Godin</strong><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="external nofollow noopener noreferrer">Welcome to Island Marketing</a></p>
</blockquote>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>在文章中插入代码。</p>
<p><strong>别名：</strong> code</p>
<figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock <span class="comment">[title]</span> <span class="comment">[lang:language]</span> <span class="comment">[url]</span> <span class="comment">[link text]</span> <span class="comment">[additional options]</span> %&#125;</span><br><span class="line">code snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>

<p>Specify additional options in <code>option:value</code> format, e.g. <code>line_number:false first_line:5</code>.</p>
<table>
<thead>
<tr>
<th align="left">Extra Options</th>
<th align="left">Description</th>
<th align="left">Default</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>line_number</code></td>
<td align="left">Show line number</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>highlight</code></td>
<td align="left">Enable code highlighting</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>first_line</code></td>
<td align="left">Specify the first line number</td>
<td align="left"><code>1</code></td>
</tr>
<tr>
<td align="left"><code>mark</code></td>
<td align="left">Line highlight specific line(s), each value separated by a comma. Specify number range using a dash Example: <code>mark:1,4-7,10</code> will mark line 1, 4 to 7 and 10.</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>wrap</code></td>
<td align="left">Wrap the code block in <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table" target="_blank" rel="external nofollow noopener noreferrer">``</a></td>
<td align="left"><code>true</code></td>
</tr>
</tbody></table>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p><strong>普通的代码块</strong></p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">codeblock</span> %&#125;</span></span><br><span class="line"><span class="xml">alert('Hello World!');</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endcodeblock</span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p><code>alert(&#39;Hello World!&#39;);</code></p>
<p><strong>指定语言</strong></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock <span class="string">lang:</span>objc %&#125;</span><br><span class="line">[rectangle <span class="string">setX:</span> <span class="number">10</span> <span class="string">y:</span> <span class="number">10</span> <span class="string">width:</span> <span class="number">20</span> <span class="string">height:</span> <span class="number">20</span>];</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>

<p><code>[rectangle setX: 10 y: 10 width: 20 height: 20];</code></p>
<p><strong>附加说明</strong></p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">codeblock</span> Array.map %&#125;</span></span><br><span class="line"><span class="xml">array.map(callback[, thisArg])</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endcodeblock</span> %&#125;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>Array.map</p>
</blockquote>
<blockquote>
<p><code>array.map(callback[, thisArg])</code></p>
</blockquote>
<p><strong>附加说明和网址</strong></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock _.compact http:<span class="comment">//underscorejs.org/#compact Underscore.js %&#125;</span></span><br><span class="line">_.compact([<span class="number">0</span>, <span class="number">1</span>, <span class="literal">false</span>, <span class="number">2</span>, <span class="string">''</span>, <span class="number">3</span>]);=&gt; [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>_.compact                                                                  <a href="http://underscorejs.org/#compact" target="_blank" rel="external nofollow noopener noreferrer">Underscore.js</a></p>
</blockquote>
<blockquote>
<p>_.compact([0, 1, false, 2, ‘’, 3]);</p>
</blockquote>
<blockquote>
<p>=&gt; [1, 2, 3]</p>
</blockquote>
<h2 id="反引号代码块"><a href="#反引号代码块" class="headerlink" title="反引号代码块"></a>反引号代码块</h2><p>另一种形式的代码块，不同的是它使用三个反引号来包裹。</p>
<p>``` [language] [title] [url] [link text] code snippet ```</p>
<a id="more"></a>

<h2 id="Pull-Quote"><a href="#Pull-Quote" class="headerlink" title="Pull Quote"></a>Pull Quote</h2><p>在文章中插入 Pull quote。</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">pullquote</span> [class] %&#125;</span></span><br><span class="line"><span class="xml">content</span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">endpullquote</span> %&#125;</span></span><br></pre></td></tr></table></figure>



<h2 id="jsFiddle"><a href="#jsFiddle" class="headerlink" title="jsFiddle"></a>jsFiddle</h2><p>在文章中嵌入 jsFiddle。</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h2><p>在文章中嵌入 Gist。</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>



<h2 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h2><p>在文章中插入 iframe。</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h2><p>在文章中插入指定大小的图片。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&#123;% img [<span class="keyword">class</span> <span class="symbol">names</span>] /<span class="symbol">path</span>/<span class="symbol">to</span>/<span class="symbol">image</span> [<span class="symbol">width</span>] [<span class="symbol">height</span>] '"<span class="symbol">title</span> <span class="symbol">text</span>" "<span class="symbol">alt</span> <span class="symbol">text</span>"' %&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h2><p>在文章中插入链接，并自动给外部链接添加 <code>target=&quot;_blank&quot;</code> 属性。</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Include-Code"><a href="#Include-Code" class="headerlink" title="Include Code"></a>Include Code</h2><p>插入 <code>source/downloads/code</code> 文件夹内的代码文件。<code>source/downloads/code</code> 不是固定的，取决于你在配置文件中 <code>code_dir</code> 的配置。</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">&#123;% include_code [title] [<span class="keyword">lan</span><span class="variable">g:language</span>] [from:<span class="built_in">line</span>] [<span class="keyword">to</span>:<span class="built_in">line</span>] path/<span class="keyword">to</span>/<span class="keyword">file</span> %&#125;</span><br></pre></td></tr></table></figure>



<h3 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h3><p><strong>嵌入 test.js 文件全文</strong></p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">include_code</span> lang:javascript test.js %&#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>只嵌入第 3 行</strong></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&#123;% include_code lang:javascript <span class="keyword">from</span>:<span class="number">3</span> to:<span class="number">3</span> test.js %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>嵌入第 5 行至第 8 行</strong></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&#123;% include_code lang:javascript <span class="keyword">from</span>:<span class="number">5</span> to:<span class="number">8</span> test.js %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>嵌入第 5 行至文件结束</strong></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&#123;% include_code lang:javascript <span class="keyword">from</span>:<span class="number">5</span> test.js %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>嵌入第 1 行至第 8 行</strong></p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">&#123;% include_code <span class="keyword">lan</span><span class="variable">g:javascript</span> <span class="keyword">to</span>:<span class="number">8</span> test.js %&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Youtube"><a href="#Youtube" class="headerlink" title="Youtube"></a>Youtube</h2><p>在文章中插入 Youtube 视频。</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">youtube</span> video_id %&#125;</span></span><br></pre></td></tr></table></figure>



<h2 id="Vimeo"><a href="#Vimeo" class="headerlink" title="Vimeo"></a>Vimeo</h2><p>在文章中插入 Vimeo 视频。</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">vimeo</span> video_id %&#125;</span></span><br></pre></td></tr></table></figure>



<h2 id="引用文章"><a href="#引用文章" class="headerlink" title="引用文章"></a>引用文章</h2><p>引用其他文章的链接。</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% post_path filename %&#125;</span><br><span class="line">&#123;% post_link filename [title] [escape] %&#125;</span><br></pre></td></tr></table></figure>



<p>在使用此标签时可以忽略文章文件所在的路径或者文章的永久链接信息、如语言、日期。</p>
<p>例如，在文章中使用 <code></code> 时，只需有一个名为 <code>how-to-bake-a-cake.md</code> 的文章文件即可。即使这个文件位于站点文件夹的 <code>source/posts/2015-02-my-family-holiday</code> 目录下、或者文章的永久链接是 <code>2018/en/how-to-bake-a-cake</code>，都没有影响。</p>
<p>默认链接文字是文章的标题，你也可以自定义要显示的文本。此时不应该使用 Markdown 语法 <code>[]()</code>。</p>
<p>默认对文章的标题和自定义标题里的特殊字符进行转义。可以使用<code>escape</code>选项，禁止对特殊字符进行转义。</p>
<p><strong>链接使用文章的标题</strong></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&#123;% post_link hexo<span class="number">-3</span><span class="number">-8</span>-released %&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://hexo.io/news/2018/10/19/hexo-3-8-released/" target="_blank" rel="external nofollow noopener noreferrer">Hexo 3.8.0 Released</a></p>
<p><strong>链接使用自定义文字</strong></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&#123;% post_link hexo<span class="number">-3</span><span class="number">-8</span>-released <span class="string">'通往文章的链接'</span> %&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://hexo.io/news/2018/10/19/hexo-3-8-released/" target="_blank" rel="external nofollow noopener noreferrer">通往文章的链接</a></p>
<p><strong>对标题的特殊字符进行转义</strong></p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">&#123;% post_link hexo-<span class="number">4</span>-released 'How to use <span class="tag">&lt;b&gt;</span> <span class="keyword">tag</span> <span class="title">in</span> title' %&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://hexo.io/news/2019/10/14/hexo-4-released/" target="_blank" rel="external nofollow noopener noreferrer">How to use  tag in title</a></p>
<p><strong>禁止对标题的特殊字符进行转义</strong></p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line">&#123;% post_link hexo<span class="number">-4</span>-released <span class="string">'&lt;b&gt;bold&lt;/b&gt; custom title'</span> <span class="literal">false</span> %&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://hexo.io/news/2019/10/14/hexo-4-released/" target="_blank" rel="external nofollow noopener noreferrer"><strong>bold</strong> custom title</a></p>
<h2 id="引用资源"><a href="#引用资源" class="headerlink" title="引用资源"></a>引用资源</h2><p>引用文章的资源。</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% asset_path filename %&#125;</span><br><span class="line">&#123;% asset_img filename [title] %&#125;</span><br><span class="line">&#123;% asset_link filename [title] [escape] %&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Raw"><a href="#Raw" class="headerlink" title="Raw"></a>Raw</h2><p>如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&#123;%<span class="built_in"> raw </span>%&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>



<h2 id="文章摘要和截断"><a href="#文章摘要和截断" class="headerlink" title="文章摘要和截断"></a>文章摘要和截断</h2><p>在文章中使用 <code>&lt;!-- more --&gt;</code>，那么 <code>&lt;!-- more --&gt;</code> 之前的文字将会被视为摘要。首页中将只出现这部分文字，同时这部分文字也会出现在正文之中。</p>
<p>例如：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line"><span class="comment">&lt;!-- more --&gt;</span></span><br><span class="line">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>

<p>首页中将只会出现</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed <span class="keyword">do</span> eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br></pre></td></tr></table></figure>

<p>正文中则会出现</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed <span class="keyword">do</span> eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line"></span><br><span class="line">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip <span class="keyword">ex</span> ea commodo consequat. Duis aute irure dolor <span class="keyword">in</span> reprehenderit <span class="keyword">in</span> voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt <span class="keyword">in</span> culpa <span class="keyword">qui</span> officia deserunt mollit anim id <span class="keyword">est</span> laborum.</span><br></pre></td></tr></table></figure>

<p><strong>注意:</strong> 摘要可能会被 Front Matter 中的 <code>excerpt</code> 覆盖。</p>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Front-matter</title>
    <url>/archives/29d51c84.html</url>
    <content><![CDATA[<h1 id="2-Front-matter"><a href="#2-Front-matter" class="headerlink" title="2.Front-matter"></a>2.Front-matter</h1><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013</span><span class="string">/7/13</span> <span class="number">20</span><span class="string">:46:25</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>layout</code></td>
<td align="left">布局</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>title</code></td>
<td align="left">标题</td>
<td align="left">文章的文件名</td>
</tr>
<tr>
<td align="left"><code>date</code></td>
<td align="left">建立日期</td>
<td align="left">文件建立日期</td>
</tr>
<tr>
<td align="left"><code>updated</code></td>
<td align="left">更新日期</td>
<td align="left">文件更新日期</td>
</tr>
<tr>
<td align="left"><code>comments</code></td>
<td align="left">开启文章的评论功能</td>
<td align="left">true</td>
</tr>
<tr>
<td align="left"><code>tags</code></td>
<td align="left">标签（不适用于分页）</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>categories</code></td>
<td align="left">分类（不适用于分页）</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>permalink</code></td>
<td align="left">覆盖文章网址</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>keywords</code></td>
<td align="left">仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</td>
<td align="left"></td>
</tr>
</tbody></table>
<p><strong>分类和标签</strong></p>
<p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line"><span class="keyword">tags:</span></span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br></pre></td></tr></table></figure>

<blockquote>
<p>分类方法的分歧</p>
<blockquote>
<p>如果您有过使用 WordPress 的经验，就很容易误解 Hexo 的分类方式。WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是 Hexo 不支持指定多个同级分类。下面的指定方法：</p>
</blockquote>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">categories:</span>  - Diary  - Life</span><br></pre></td></tr></table></figure>

<blockquote>
<p>会使分类<code>Life</code>成为<code>Diary</code>的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p>
</blockquote>
<blockquote>
<p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p>
</blockquote>
<figure class="highlight ldif"><table><tr><td class="code"><pre><span class="line"><span class="attribute">categories</span>: </span><br><span class="line"><span class="literal">- [Diary, PlayStation]</span></span><br><span class="line"><span class="literal">- [Diary, Games]</span></span><br><span class="line"><span class="literal">- [Life]</span></span><br></pre></td></tr></table></figure>



<blockquote>
<p>此时这篇文章同时包括三个分类： <code>PlayStation</code> 和 <code>Games</code> 分别都是父分类 <code>Diary</code> 的子分类，同时 <code>Life</code> 是一个没有子分类的分类。</p>
</blockquote>
</blockquote>
<p><strong>JSON Front-matter</strong></p>
<p>除了 YAML 外，你也可以使用 JSON 来编写 Front-matter，只要将 <code>---</code> 代换成 <code>;;;</code> 即可。</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="string">"title"</span>: <span class="string">"Hello World"</span>,</span><br><span class="line"><span class="string">"date"</span>: <span class="string">"2013/7/13 20:46:25"</span></span><br><span class="line"><span class="comment">;;;</span></span><br></pre></td></tr></table></figure>





<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>写作</title>
    <url>/archives/f9cb768.html</url>
    <content><![CDATA[<h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><h2 id="1-写作"><a href="#1-写作" class="headerlink" title="1.写作"></a>1.写作</h2><p>你可以执行下列命令来创建一篇新文章或者新的页面。</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> [layout] &lt;<span class="built_in">title</span>&gt;</span><br></pre></td></tr></table></figure>

<p>您可以在命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。</p>
<p><strong>布局（Layout）</strong></p>
<p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p>
<table>
<thead>
<tr>
<th align="left">布局</th>
<th align="left">路径</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>post</code></td>
<td align="left"><code>source/_posts</code></td>
</tr>
<tr>
<td align="left"><code>page</code></td>
<td align="left"><code>source</code></td>
</tr>
<tr>
<td align="left"><code>draft</code></td>
<td align="left"><code>source/_drafts</code></td>
</tr>
</tbody></table>
<blockquote>
<p>如果你不想你的文章被处理，你可以将 Front-Matter 中的<code>layout:</code> 设为 <code>false</code> 。</p>
</blockquote>
<p><strong>文件名称</strong></p>
<p>Hexo 默认以标题做为文件名称，但您可编辑 <code>new_post_name</code> 参数来改变默认的文件名称，举例来说，设为 <code>:year-:month-:day-:title.md</code> 可让您更方便的通过日期来管理文章。</p>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>:title</code></td>
<td align="left">标题（小写，空格将会被替换为短杠）</td>
</tr>
<tr>
<td align="left"><code>:year</code></td>
<td align="left">建立的年份，比如， <code>2015</code></td>
</tr>
<tr>
<td align="left"><code>:month</code></td>
<td align="left">建立的月份（有前导零），比如， <code>04</code></td>
</tr>
<tr>
<td align="left"><code>:i_month</code></td>
<td align="left">建立的月份（无前导零），比如， <code>4</code></td>
</tr>
<tr>
<td align="left"><code>:day</code></td>
<td align="left">建立的日期（有前导零），比如， <code>07</code></td>
</tr>
<tr>
<td align="left"><code>:i_day</code></td>
<td align="left">建立的日期（无前导零），比如， <code>7</code></td>
</tr>
</tbody></table>
<p><strong>草稿</strong></p>
<p>刚刚提到了 Hexo 的一种特殊布局：<code>draft</code>，这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹，您可通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹，该命令的使用方式与 <code>new</code> 十分类似，您也可在命令中指定 <code>layout</code> 来指定布局。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">$ hexo publish [layout] <span class="tag">&lt;<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p>
<p><strong>模版（Scaffold）</strong></p>
<p>在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> <span class="type">photo</span> <span class="string">"My Gallery"</span></span><br></pre></td></tr></table></figure>



<p>在执行这行指令时，Hexo 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>photo.md</code>，并根据其内容建立文章，以下是您可以在模版中使用的变量：</p>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>layout</code></td>
<td align="left">布局</td>
</tr>
<tr>
<td align="left"><code>title</code></td>
<td align="left">标题</td>
</tr>
<tr>
<td align="left"><code>date</code></td>
<td align="left">文件建立日期</td>
</tr>
</tbody></table>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>指令</title>
    <url>/archives/81ac8ad8.html</url>
    <content><![CDATA[<h1 id="2-指令"><a href="#2-指令" class="headerlink" title="2.指令"></a>2.指令</h1><hr>
<p><strong>init</strong></p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo init [folder]</span><br></pre></td></tr></table></figure>



<p><strong>new</strong></p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> [layout] &lt;<span class="built_in">title</span>&gt;</span><br></pre></td></tr></table></figure>

<p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <strong><em>_config.yml</em></strong>中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-p</code>, <code>--path</code></td>
<td align="left">自定义新文章的路径</td>
</tr>
<tr>
<td align="left"><code>-r</code>, <code>--replace</code></td>
<td align="left">如果存在同名文章，将其替换</td>
</tr>
<tr>
<td align="left"><code>-s</code>, <code>--slug</code></td>
<td align="left">文章的 Slug，作为新文章的文件名和发布后的 URL</td>
</tr>
</tbody></table>
<p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">hexo new<span class="built_in"> page </span>--path about/me <span class="string">"About me"</span></span><br></pre></td></tr></table></figure>

<p>以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>&quot;About me&quot;</code></p>
<p><b>注意</b>！title 是必须指定的！如果你这么做并不能达到你的目的：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">hexo new<span class="built_in"> page </span>--path about/me</span><br></pre></td></tr></table></figure>

<p>此时 Hexo 会创建 <code>source/_posts/about/me.md</code>，同时 <code>me.md</code> 的 Front Matter 中的 title 为 <code>&quot;page&quot;</code>。这是因为在上述命令中，hexo-cli 将 <code>page</code> 视为指定文章的标题、并采用默认的 <code>layout</code>。</p>
<p><strong>generate</strong></p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">generate</span></span><br></pre></td></tr></table></figure>

<p>生成静态文件。</p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-d</code>, <code>--deploy</code></td>
<td align="left">文件生成后立即部署网站</td>
</tr>
<tr>
<td align="left"><code>-w</code>, <code>--watch</code></td>
<td align="left">监视文件变动</td>
</tr>
<tr>
<td align="left"><code>-b</code>, <code>--bail</code></td>
<td align="left">生成过程中如果发生任何未处理的异常则抛出异常</td>
</tr>
<tr>
<td align="left"><code>-f</code>, <code>--force</code></td>
<td align="left">强制重新生成文件 Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。 使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td>
</tr>
<tr>
<td align="left"><code>-c</code>, <code>--concurrency</code></td>
<td align="left">最大同时生成文件的数量，默认无限制</td>
</tr>
</tbody></table>
<p><strong>publish</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">$ hexo publish [layout] <span class="tag">&lt;<span class="name">filename</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>发表草稿。</p>
<p><strong>server</strong></p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">server</span></span><br></pre></td></tr></table></figure>

<p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-p</code>, <code>--port</code></td>
<td align="left">重设端口</td>
</tr>
<tr>
<td align="left"><code>-s</code>, <code>--static</code></td>
<td align="left">只使用静态文件</td>
</tr>
<tr>
<td align="left"><code>-l</code>, <code>--log</code></td>
<td align="left">启动日记记录，使用覆盖记录格式</td>
</tr>
</tbody></table>
<p><strong>deploy</strong></p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo deploy</span><br></pre></td></tr></table></figure>

<p>部署网站。</p>
<p><strong>render</strong></p>
<figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>

<p>渲染文件。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-o</code>, <code>--output</code></td>
<td align="left">设置输出路径</td>
</tr>
</tbody></table>
<p><strong>migrate</strong></p>
<figure class="highlight elm"><table><tr><td class="code"><pre><span class="line">$ hexo migrate &lt;<span class="keyword">type</span>&gt;</span><br></pre></td></tr></table></figure>

<p>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration" target="_blank" rel="external nofollow noopener noreferrer">迁移内容</a>。</p>
<p><strong>clean</strong></p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo clean</span><br></pre></td></tr></table></figure>

<p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p>
<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>
<p><strong>list</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="built_in">list</span> &lt;type&gt;</span><br></pre></td></tr></table></figure>

<p>列出网站资料。</p>
<p><strong>version</strong></p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="built_in">version</span></span><br></pre></td></tr></table></figure>

<p>显示 Hexo 版本。</p>
<a id="more"></a>

<h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><p><strong>安全模式</strong></p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="comment">--safe</span></span><br></pre></td></tr></table></figure>

<p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p>
<p><strong>调试模式</strong></p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="comment">--debug</span></span><br></pre></td></tr></table></figure>

<p>在终端中显示调试信息并记录到 <code>debug.log</code>。当您碰到问题时，可以尝试用调试模式重新执行一次，并 <a href="https://github.com/hexojs/hexo/issues/new" target="_blank" rel="external nofollow noopener noreferrer">提交调试信息到 GitHub</a>。</p>
<p><strong>简洁模式</strong></p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="comment">--silent</span></span><br></pre></td></tr></table></figure>

<p>隐藏终端信息。</p>
<p><strong>显示草稿</strong></p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="comment">--draft</span></span><br></pre></td></tr></table></figure>

<p>显示 <code>source/_drafts</code> 文件夹中的草稿文章。</p>
<p><strong>自定义 CWD</strong></p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="params">--cwd</span> <span class="string">/path/to/cwd</span></span><br></pre></td></tr></table></figure>

<p>自定义当前工作目录（Current working directory）的路径。</p>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 搭建博客优化指南</title>
    <url>/archives/275cc748.html</url>
    <content><![CDATA[<h1 id="Hexo-搭建博客之优化指南"><a href="#Hexo-搭建博客之优化指南" class="headerlink" title="Hexo 搭建博客之优化指南"></a>Hexo 搭建博客之优化指南</h1><h2 id="1-看懂站点配置文件"><a href="#1-看懂站点配置文件" class="headerlink" title="1.看懂站点配置文件"></a>1.看懂站点配置文件</h2><p><strong>package.json</strong></p>
<p>应用程序的信息。<a href="https://ejs.co/" target="_blank" rel="external nofollow noopener noreferrer">EJS</a>, <a href="http://learnboost.github.io/stylus/" target="_blank" rel="external nofollow noopener noreferrer">Stylus</a> 和 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="external nofollow noopener noreferrer">Markdown</a> renderer 已默认安装，您可以自由移除。</p>
<p><strong>scaffolds</strong></p>
<p><a href="https://hexo.io/zh-cn/docs/writing" target="_blank" rel="external nofollow noopener noreferrer">模版</a> 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>
<p>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p>
<p><strong>source</strong></p>
<p>资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p>
<blockquote>
<p><strong>网站存放在子目录</strong></p>
</blockquote>
<blockquote>
<blockquote>
<p>如果您的网站存放在子目录中，例如 <code>http://yoursite.com/blog</code>，则请将您的 <code>url</code> 设为     <code>http://yoursite.com/blog</code> 并把 <code>root</code> 设为 <code>/blog/</code>。</p>
</blockquote>
</blockquote>
<hr>
<p><strong>目录</strong></p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>source_dir</code></td>
<td align="left">资源文件夹，这个文件夹用来存放内容。</td>
<td align="left"><code>source</code></td>
</tr>
<tr>
<td align="left"><code>public_dir</code></td>
<td align="left">公共文件夹，这个文件夹用于存放生成的站点文件。</td>
<td align="left"><code>public</code></td>
</tr>
<tr>
<td align="left"><code>tag_dir</code></td>
<td align="left">标签文件夹</td>
<td align="left"><code>tags</code></td>
</tr>
<tr>
<td align="left"><code>archive_dir</code></td>
<td align="left">归档文件夹</td>
<td align="left"><code>archives</code></td>
</tr>
<tr>
<td align="left"><code>category_dir</code></td>
<td align="left">分类文件夹</td>
<td align="left"><code>categories</code></td>
</tr>
<tr>
<td align="left"><code>code_dir</code></td>
<td align="left">Include code 文件夹，<code>source_dir</code> 下的子目录</td>
<td align="left"><code>downloads/code</code></td>
</tr>
<tr>
<td align="left"><code>i18n_dir</code></td>
<td align="left">国际化（i18n）文件夹</td>
<td align="left"><code>:lang</code></td>
</tr>
<tr>
<td align="left"><code>skip_render</code></td>
<td align="left">跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到 <code>public</code> 目录中。您可使用 <a href="https://github.com/micromatch/micromatch#extended-globbing" target="_blank" rel="external nofollow noopener noreferrer">glob 表达式</a>来匹配路径。</td>
<td align="left"></td>
</tr>
</tbody></table>
<p><strong>文章</strong></p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>new_post_name</code></td>
<td align="left">新文章的文件名称</td>
<td align="left">:title.md</td>
</tr>
<tr>
<td align="left"><code>default_layout</code></td>
<td align="left">预设布局</td>
<td align="left">post</td>
</tr>
<tr>
<td align="left"><code>auto_spacing</code></td>
<td align="left">在中文和英文之间加入空格</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>titlecase</code></td>
<td align="left">把标题转换为 title case</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>external_link</code></td>
<td align="left">在新标签中打开链接</td>
<td align="left">true</td>
</tr>
<tr>
<td align="left"><code>external_link.enable</code></td>
<td align="left">在新标签中打开链接</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>external_link.field</code></td>
<td align="left">对整个网站（<code>site</code>）生效或仅对文章（<code>post</code>）生效</td>
<td align="left"><code>site</code></td>
</tr>
<tr>
<td align="left"><code>external_link.exclude</code></td>
<td align="left">需要排除的域名。主域名和子域名如 <code>www</code> 需分别配置</td>
<td align="left"><code>[]</code></td>
</tr>
<tr>
<td align="left"><code>filename_case</code></td>
<td align="left">把文件名称转换为 (1) 小写或 (2) 大写</td>
<td align="left">0</td>
</tr>
<tr>
<td align="left"><code>render_drafts</code></td>
<td align="left">显示草稿</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>post_asset_folder</code></td>
<td align="left">启动 <a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="external nofollow noopener noreferrer">Asset 文件夹</a></td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>relative_link</code></td>
<td align="left">把链接改为与根目录的相对位址</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>future</code></td>
<td align="left">显示未来的文章</td>
<td align="left">true</td>
</tr>
<tr>
<td align="left"><code>highlight</code></td>
<td align="left">代码块的设置</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>highlight.enable</code></td>
<td align="left">开启代码块高亮</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>highlight.auto_detect</code></td>
<td align="left">如果未指定语言，则启用自动检测</td>
<td align="left"><code>false</code></td>
</tr>
<tr>
<td align="left"><code>highlight.line_number</code></td>
<td align="left">显示行数 <em>Enabling this option will also enable wrap option</em></td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>highlight.tab_replace</code></td>
<td align="left">用 n 个空格替换 tabs；如果值为空，则不会替换 tabs</td>
<td align="left"><code>&#39;&#39;</code></td>
</tr>
<tr>
<td align="left"><code>highlight.wrap</code></td>
<td align="left">Wrap the code block in <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table" target="_blank" rel="external nofollow noopener noreferrer">``</a></td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>highlight.hljs</code></td>
<td align="left">Use the <code>hljs-*</code> prefix for CSS classes</td>
<td align="left"><code>false</code></td>
</tr>
</tbody></table>
<a id="more"></a>

<p><strong>分类 &amp; 标签</strong></p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>default_category</code></td>
<td align="left">默认分类</td>
<td align="left"><code>uncategorized</code></td>
</tr>
<tr>
<td align="left"><code>category_map</code></td>
<td align="left">分类别名</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>tag_map</code></td>
<td align="left">标签别名</td>
<td align="left"></td>
</tr>
</tbody></table>
<p><strong>日期 / 时间格式</strong></p>
<p>Hexo 使用 <a href="http://momentjs.com/" target="_blank" rel="external nofollow noopener noreferrer">Moment.js</a> 来解析和显示时间。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>date_format</code></td>
<td align="left">日期格式</td>
<td align="left"><code>YYYY-MM-DD</code></td>
</tr>
<tr>
<td align="left"><code>time_format</code></td>
<td align="left">时间格式</td>
<td align="left"><code>HH:mm:ss</code></td>
</tr>
<tr>
<td align="left"><code>use_date_for_updated</code></td>
<td align="left">启用以后，如果 Front Matter 中没有指定 <code>updated</code>， <a href="https://hexo.io/zh-cn/docs/variables#页面变量" target="_blank" rel="external nofollow noopener noreferrer"><code>post.updated</code></a> 将会使用 <code>date</code> 的值而不是文件的创建时间。在 Git 工作流中这个选项会很有用</td>
<td align="left"><code>true</code></td>
</tr>
</tbody></table>
<p><strong>分页</strong></p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>per_page</code></td>
<td align="left">每页显示的文章量 (0 = 关闭分页功能)</td>
<td align="left"><code>10</code></td>
</tr>
<tr>
<td align="left"><code>pagination_dir</code></td>
<td align="left">分页目录</td>
<td align="left"><code>page</code></td>
</tr>
</tbody></table>
<p><strong>扩展</strong></p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>theme</code></td>
<td align="left">当前主题名称。值为<code>false</code>时禁用主题</td>
</tr>
<tr>
<td align="left"><code>theme_config</code></td>
<td align="left">主题的配置文件。在这里放置的配置会覆盖主题目录下的 <code>_config.yml</code> 中的配置</td>
</tr>
<tr>
<td align="left"><code>deploy</code></td>
<td align="left">部署部分的设置</td>
</tr>
<tr>
<td align="left"><code>meta_generator</code></td>
<td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta#属性" target="_blank" rel="external nofollow noopener noreferrer">Meta generator</a> 标签。 值为 <code>false</code> 时 Hexo 不会在头部插入该标签</td>
</tr>
</tbody></table>
<p><strong>包括或不包括目录和文件</strong></p>
<p>在 Hexo 配置文件中，通过设置 include/exclude 可以让 Hexo 进行处理或忽略某些目录和文件夹。你可以使用 <a href="https://github.com/isaacs/minimatch" target="_blank" rel="external nofollow noopener noreferrer">glob 表达式</a> 对目录和文件进行匹配。</p>
<p><code>include</code> and <code>exclude</code> options only apply to the <code>source/</code> folder, whereas <code>ignore</code> option applies to all folders.</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>include</code></td>
<td align="left">Hexo 默认会忽略隐藏文件和文件夹（包括名称以下划线和 <code>.</code> 开头的文件和文件夹，Hexo 的 <code>_posts</code> 和 <code>_data</code> 等目录除外）。通过设置此字段将使 Hexo 处理他们并将它们复制到 <code>source</code> 目录下。</td>
</tr>
<tr>
<td align="left"><code>exclude</code></td>
<td align="left">Hexo 会忽略这些文件和目录</td>
</tr>
<tr>
<td align="left"><code>ignore</code></td>
<td align="left">Ignore files/folders</td>
</tr>
</tbody></table>
<p>列表中的每一项都必须用单引号或双引号包裹起来。</p>
<p><strong>使用代替配置文件</strong></p>
<p>可以在 hexo-cli 中使用 <code>--config</code> 参数来指定自定义配置文件的路径。你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。例如：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># use 'custom.yml' in place of '_config.yml'</span></span><br><span class="line">$ hexo<span class="built_in"> server </span>--config custom.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># use 'custom.yml' &amp; 'custom2.json', prioritizing 'custom3.yml', then 'custom2.json'</span></span><br><span class="line">$ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></table></figure>



<p>当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个 <code>_multiconfig.yml</code>。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。</p>
<p>例如，使用 <code>--options</code> 指定了两个自定义配置文件：</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">generate</span> --<span class="keyword">config</span> custom<span class="variable">.yml</span>,custom2<span class="variable">.json</span></span><br></pre></td></tr></table></figure>

<p>如果 <code>custom.yml</code> 中指定了 <code>foo: bar</code>，在 <code>custom2.json</code>中指定了 <code>&quot;foo&quot;: &quot;dinosaur&quot;</code>，那么在 <code>_multiconfig.yml</code> 中你会得到 <code>foo: dinosaur</code>。</p>
<hr>
<p><strong><em>首页：</em></strong> <a href="https://wwyyqblog.work" target="_blank" rel="external nofollow noopener noreferrer">wwyyqblog.work</a></p>
<p><img src="/images/mylogo.png" alt="logo"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown教程</title>
    <url>/archives/96be88e3.html</url>
    <content><![CDATA[<h1 id="Markdown-教程"><a href="#Markdown-教程" class="headerlink" title="Markdown 教程"></a>Markdown 教程</h1><p><strong>Markdown 标题</strong></p>
<p>Markdown 标题有两种格式。</p>
<p><strong>1、使用 = 和 - 标记一级和二级标题</strong></p>
<p>= 和 - 标记语法格式如下：</p>
<p>我展示的是一级标题 ============  我展示的是二级标题 —————–</p>
<p><strong>使用 # 号标记</strong></p>
<p>使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。</p>
<p><strong>Markdown 段落</strong></p>
<p>Markdown 段落没有特殊的格式，直接编写文字就好，<strong>段落的换行是使用两个以上空格加上回车</strong>。</p>
<p>当然也可以在段落后面使用一个空行来表示重新开始一个段落。</p>
<p><strong>字体</strong></p>
<p>Markdown 可以使用以下几种字体：</p>
<p>*斜体文本* _斜体文本_ **粗体文本** __粗体文本__ ***粗斜体文本*** ___粗斜体文本___</p>
<p><strong>分隔线</strong></p>
<p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p>
<p><em><em>\</em>\</em>     ———-      <em>____\</em></p>
<p><strong>删除线</strong></p>
<p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：</p>
<p>~~BAIDU.COM~~</p>
<p><strong>下划线</strong></p>
<p>下划线可以通过 HTML 的 <code>&lt;u&gt;</code> 标签来实现：</p>
<p>&lt;u&gt;带下划线文本&lt;/u&gt;</p>
<p><strong>脚注</strong></p>
<p>脚注是对文本的补充说明。</p>
<p>Markdown 脚注的格式如下:</p>
<p>[^要注明的文本]</p>
<p>以下实例演示了脚注的用法：</p>
<p>创建脚注格式类似这样 [^ycy-ww]。  </p>
<a id="more"></a>

<p><strong>Markdown 列表</strong></p>
<p>Markdown 支持有序列表和无序列表。</p>
<p>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记：</p>
<p>* 第一项</p>
<p>* 第二项</p>
<p>* 第三项</p>
<p>+ 第一项</p>
<p>+ 第二项</p>
<p>+ 第三项</p>
<p>- 第一项</p>
<p>- 第二项</p>
<p>- 第三项</p>
<p>有序列表使用数字并加上 . 号来表示，如：</p>
<ol>
<li>第一项 2. 第二项 3. 第三项</li>
</ol>
<p><strong>列表嵌套</strong></p>
<p>列表嵌套只需在子列表中的选项添加四个空格即可：</p>
<ol>
<li>第一项：<ul>
<li>第一项嵌套的第一个元素</li>
<li>第一项嵌套的第二个元素</li>
</ul>
</li>
<li>第二项：<ul>
<li>第二项嵌套的第一个元素</li>
<li>第二项嵌套的第一个元素</li>
</ul>
</li>
</ol>
<p>有序列表使用数字并加上 . 号来表示，如：</p>
<ol>
<li>第一项 2. 第二项 3. 第三项</li>
</ol>
<p><strong>列表嵌套</strong></p>
<p>列表嵌套只需在子列表中的选项添加四个空格即可：</p>
<ol>
<li><p>第一项：</p>
<p> - 第一项嵌套的第一个元素</p>
<p> - 第一项嵌套的第二个元素</p>
</li>
<li><p>第二项：</p>
<p> - 第二项嵌套的第一个元素</p>
<p> - 第二项嵌套的第一个元素</p>
</li>
</ol>
<p><strong>Markdown 区块</strong></p>
<p>Markdown 区块引用是在段落开头使用 <strong>&gt;</strong> 符号 ，然后后面紧跟一个<strong>空格</strong>符号</p>
<p>另外区块是可以嵌套的，一个 <strong>&gt;</strong> 符号是最外层，两个 <strong>&gt;</strong> 符号是第一层嵌套，以此类推</p>
<p><strong>区块中使用列表</strong></p>
<p>区块中使用列表实例如下：</p>
<p>&gt; 区块中使用列表</p>
<p>&gt; 1. 第一项</p>
<p>&gt; 2. 第二项</p>
<p>&gt; +  第一项</p>
<p>&gt; +  第二项</p>
<p>&gt; +  第三项</p>
<p><strong>列表中使用区块</strong></p>
<p>如果要在列表项目内放进区块，那么就需要在 <strong>&gt;</strong> 前添加四个空格的缩进。</p>
<p>区块中使用列表实例如下：</p>
<p>* 第一项   </p>
<p>​    &gt; 菜鸟教程     </p>
<p>​    &gt; 学的不仅是技术更是梦想 </p>
<p>* 第二项</p>
<p><strong>Markdown 代码</strong></p>
<p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如：</p>
<p>`printf()` 函数</p>
<p><strong>代码区块</strong></p>
<p>代码区块使用 <strong>4 个空格</strong>或者一个<strong>制表符（Tab 键）</strong>。</p>
<p>你也可以用 ``` 包裹一段代码，并指定一种语言（也可以不指定）：</p>
<p>```javascript $(document).ready(function () {     alert(‘ycy-ww’); }); ```</p>
<p><strong>Markdown 链接</strong></p>
<p>链接使用方法如下：</p>
<p>[链接名称](链接地址)  或者  &lt;链接地址&gt;</p>
<p>直接使用链接地址：</p>
<p>&lt;<a href="https://www.wwyyqblog.work&gt;" target="_blank" rel="noopener">https://www.wwyyqblog.work&gt;</a></p>
<p><strong>高级链接</strong></p>
<p>链接也可以用变量来代替，文档末尾附带变量地址： 这个链接用 1 作为网址变量 [Google][1] 这个链接用 ycy-ww 作为网址变量[ycy-ww][ycy-ww] 然后在文档的结尾为变量赋值（网址）    </p>
<p>[1]: <a href="http://www.google.com/" target="_blank" rel="external nofollow noopener noreferrer">http://www.google.com/</a>            [ycy-ww]: <a href="http://www.wwyyqblog.work/">http://www.wwyyqblog.work/</a></p>
<p><strong>Markdown 图片</strong></p>
<p>Markdown 图片语法格式如下：</p>
<p>![alt 属性文本](图片地址)</p>
<p>![alt 属性文本](图片地址 “可选标题”)</p>
<ul>
<li>开头一个感叹号 !</li>
<li>接着一个方括号，里面放上图片的替代文字</li>
<li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</li>
</ul>
<p>使用实例：</p>
<p>![ycy-ww 图标](/images/mylogo.png “ycy-ww”)</p>
<p>当然，你也可以像网址那样对图片网址使用变量:</p>
<p>这个链接用 1 作为网址变量 [ycy-ww][1]. 然后在文档的结尾位变量赋值（网址）  [1]: “/images/mylogo.png “</p>
<p>显示结果如下：</p>
<p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <img> 标签。</p>
<img src="/images/mylogo.png" width="50%">

<p>显示结果如下：</p>
<p><strong>Markdown 表格</strong></p>
<p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p>
<p>语法格式如下：</p>
<p>|        表头            |  表头                |</p>
<p>|    -----                |            ------        |</p>
<p>|       单元格        |  单元格             |</p>
<p>|        单元格        |        单元格        |</p>
<p>对齐方式</p>
<p><strong>我们可以设置表格的对齐方式：</strong></p>
<ul>
<li>-: 设置内容和标题栏居右对齐。</li>
<li>:- 设置内容和标题栏居左对齐。</li>
<li>:-: 设置内容和标题栏居中对齐。</li>
</ul>
<p>实例如下：</p>
<table>
<thead>
<tr>
<th align="left">左对齐</th>
<th align="right">右对齐</th>
<th align="center">居中对齐</th>
</tr>
</thead>
<tbody><tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
<tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
</tbody></table>
<p><strong>Markdown 高级技巧</strong></p>
<p><strong>支持的 HTML 元素</strong></p>
<p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p>
<p>目前支持的 HTML 元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等 ，如：</p>
<p>使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</p>
<p><strong>转义</strong></p>
<p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p>
<p><strong>文本加粗</strong>  </p>
<p>** 正常显示星号 **</p>
<p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>
<p>\   反斜线<br>`   反引号</p>
<p>* 星号<br>_   下划线<br>{}  花括号<br>[]  方括号<br>()  小括号</p>
<p># 井字号</p>
<p>+ 加号</p>
<p>- 减号<br>.   英文句点<br>!   感叹号</p>
<p><strong>公式</strong></p>
<p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：</p>
<p>$$ \mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}  \mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \ \frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \ \frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \ \end{vmatrix} $$tep1}{\style{visibility:hidden}{(x+1)(x+1)}} $$</p>
<hr>
<p><strong><em>转载标明出处:</em></strong> <em><a href="http://www.wwyyqblog.work">www.wwyyqblog.work</a></em>                            </p>
<p><kbd>ycy-ww 出品</kbd></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
